input:
  - name: ActiveMQ
    id: activemq
    description: |
      This plugin gathers queue, topics and subscribers metrics using the
      Console API [ActiveMQ](https://activemq.apache.org/) message broker
      daemon.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Aerospike
    id: aerospike
    description: |
      This plugin queries [Aerospike](https://www.aerospike.com) server(s) for
      node statistics and statistics on all configured namespaces.

      > [!CAUTION]
      > As of version 1.30 the Aerospike plugin has been deprecated in favor of
      > the prometheus plugin and the officially supported [Aerospike Prometheus
      > Exporter](https://aerospike.com/docs/monitorstack/configure/configure-exporter)

      For details on the measurements mean, please consult the [Aerospike
      Metrics Reference
      Docs](https://www.aerospike.com/docs/reference/metrics).

      > [!NOTE]
      > Metric names will have dashes (`-`) replaced as underscores (`_`) to
      > make querying more consistently and easy.

      All metrics are attempted to be cast to integers, then booleans, then
      strings in order.
    introduced: v0.2.0
    deprecated: v1.30.0
    removal: v1.40.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Alibaba Cloud Monitor Service (Aliyun)
    id: aliyuncms
    description: |
      This plugin gathers statistics from the [Alibaba / Aliyun cloud
      monitoring service](https://www.alibabacloud.com). In the following we
      will use `Aliyun` instead of `Alibaba` as it's the default naming across
      the web console and docs.
    introduced: v1.19.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: AMD ROCm System Management Interface (SMI)
    id: amd_rocm_smi
    description: |
      This plugin gathers statistics including memory and GPU usage,
      temperatures etc from [AMD ROCm platform](https://rocm.docs.amd.com/)
      GPUs.

      > [!IMPORTANT]
      > The [`rocm-smi` binary]() is required and needs to be installed on the
      > system.
    introduced: v1.20.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, system]
  - name: AMQP Consumer
    id: amqp_consumer
    description: |
      This plugin consumes messages from an Advanced Message Queuing Protocol
      v0.9.1 broker. A prominent implementation of this protocol is
      [RabbitMQ](https://www.rabbitmq.com).

      Metrics are read from a topic exchange using the configured queue and
      binding key. The message payloads must be formatted in one of the
      supported [data formats](/telegraf/v1/data_formats/input).

      For an introduction check the [AMQP concepts
      page](https://www.rabbitmq.com/tutorials/amqp-concepts.html) and the
      [RabbitMQ getting started
      guide](https://www.rabbitmq.com/getstarted.html).
    introduced: v1.3.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Apache
    id: apache
    description: |
      This plugin collects performance information from [Apache HTTP
      Servers](https://httpd.apache.org) using the [`mod_status` module]().
      Typically, this module is configured to expose a page at the
      `/server-status?auto` endpoint the server.

      The [ExtendedStatus
      option](https://httpd.apache.org/docs/current/mod/core.html#extendedstatus)
      must be enabled in order to collect all available fields. For information
      about configuration of your server check the [module
      documentation](https://httpd.apache.org/docs/current/mod/mod_status.html).
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: APC UPSD
    id: apcupsd
    description: |
      This plugin gathers data from one or more [apcupsd
      daemon](https://sourceforge.net/projects/apcupsd/) over the NIS network
      protocol. To query a server, the daemon must be running and be
      accessible.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, server]
  - name: Apache Aurora
    id: aurora
    description: |
      This plugin gathers metrics from [Apache
      Aurora](https://aurora.apache.org) schedulers. For monitoring
      recommendations check the [Monitoring your Aurora
      cluster](https://aurora.apache.org/documentation/latest/operations/monitoring)
      article.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, server]
  - name: Azure Monitor
    id: azure_monitor
    description: |
      This plugin gathers metrics of Azure resources using the [Azure
      Monitor](https://docs.microsoft.com/en-us/azure/azure-monitor) API. The
      plugin requires a `client_id`, `client_secret` and `tenant_id` for
      authentication via access token. The `subscription_id` is required for
      accessing Azure resources.

      Check the [supported metrics
      page](https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/metrics-supported)
      for available resource types and their metrics.

      > [!IMPORTANT]
      > The Azure API has a read limit of 12,000 requests per hour. Please make
      > sure you don't exceed this limit with the total number of metrics you
      > are in the configured interval.
    introduced: v1.25.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Azure Queue Storage
    id: azure_storage_queue
    description: |
      This plugin gathers queue sizes from the [Azure Queue
      Storage](https://learn.microsoft.com/en-us/azure/storage/queues) service,
      storing a large numbers of messages.
    introduced: v1.13.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Bcache
    id: bcache
    description: |
      This plugin gathers statistics for the [block layer
      cache](https://docs.kernel.org/admin-guide/bcache.html) from the
      `stats_total` directory and `dirty_data` file.
    introduced: v0.2.0
    os_support: [linux]
    tags: [system]
  - name: Beanstalkd
    id: beanstalkd
    description: |
      This plugin collects server statistics as well as tube statistics from a
      [Beanstalkd work queue](https://beanstalkd.github.io/) as reported by the
      `stats` and `stats-tube` server commands.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Beat
    id: beat
    description: |
      This plugin will collect metrics from a
      [Beats](https://www.elastic.co/beats) instances. It is known to work with
      Filebeat and Kafkabeat.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: BIND 9 Nameserver
    id: bind
    description: |
      This plugin collects metrics from [BIND 9
      nameservers](https://www.isc.org/bind) using the XML or JSON endpoint.

      For _XML_, version 2 statistics (BIND 9.6 to 9.9) and version 3
      statistics (BIND 9.9+) are supported. Version 3 statistics are the
      default and only XML format in BIND 9.10+.

      > [!NOTE]
      > For BIND 9.9 to support version 3 statistics, it must be built with the
      > `--enable-newstats` compile flag, and the statistics must be
      > specifically requested via the correct URL.

      For _JSON_, version 1 statistics (BIND 9.10+) are supported. As of
      writing, some distros still do not enable support for JSON statistics in
      their BIND packages.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Bond
    id: bond
    description: |
      This plugin collects metrics for both the network bond interface as well
      as its slave interfaces using `/proc/net/bonding/*` files.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Burrow
    id: burrow
    description: |
      This plugin collect Kafka topic, consumer and partition status from the
      [Burrow - Kafka Consumer Lag
      Checking](https://github.com/linkedin/Burrow) companion via [HTTP
      API](https://github.com/linkedin/Burrow/wiki/HTTP-Endpoint). Burrow v1.x
      versions are supported.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Ceph Storage
    id: ceph
    description: |
      This plugin collects performance metrics from MON and OSD nodes in a
      [Ceph storage cluster](https://ceph.com). Support for Telegraf has been
      introduced in the v13.x Mimic release where data is sent to a socket (see
      [their documnetation](https://docs.ceph.com/en/latest/mgr/telegraf)).
    introduced: v0.13.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Control Group
    id: cgroup
    description: |
      This plugin gathers statistics per [control group
      (cgroup)](https://docs.kernel.org/admin-guide/cgroup-v2.html).

      > [!NOTE]
      > Consider restricting paths to the set of cgroups you are interested in
      > if you have a large number of cgroups, to avoid cardinality issues.

      The plugin supports the _single value format_ in the form

      the _new line separated values format_ in the form

      the _space separated values format_ in the form

      and the _space separated keys and value, separated by new line format_ in
      the form
    introduced: v1.0.0
    os_support: [linux]
    tags: [system]
  - name: chrony
    id: chrony
    description: |
      This plugin queries metrics from a [chrony NTP
      server](https://chrony-project.org). For details on the meaning of the
      gathered fields please check the [chronyc
      manual](https://chrony-project.org/doc/4.4/chronyc.html).
    introduced: v0.13.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Cisco Model-Driven Telemetry (MDT)
    id: cisco_telemetry_mdt
    description: |
      This plugin consumes [Cisco model-driven telemetry
      (MDT)](https://www.cisco.com/c/en/us/products/collateral/switches/catalyst-9300-series-switches/model-driven-telemetry-wp.html)
      data from Cisco IOS XR, IOS XE and NX-OS platforms via TCP or GRPC.
      GRPC-based transport can utilize TLS for authentication and encryption.
      Telemetry data is expected to be GPB-KV (self-describing-gpb) encoded.

      The GRPC dialout transport is supported on various IOS XR (64-bit) 6.1.x
      and later, IOS XE 16.10 and later, as well as NX-OS 7.x and later
      platforms. The TCP dialout transport is supported on IOS XR (32-bit and
      64-bit) 6.1.x and later.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: ClickHouse
    id: clickhouse
    description: |
      This plugin gathers statistics data from a [ClickHouse
      server](https://github.com/ClickHouse/ClickHouse). Users on Clickhouse
      Cloud will not see the Zookeeper metrics as they may not have permissions
      to query those tables.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Google Cloud PubSub
    id: cloud_pubsub
    description: |
      This plugin consumes messages from the [Google Cloud
      PubSub](https://cloud.google.com/pubsub) service and creates metrics
      using one of the supported [data
      formats](/telegraf/v1/data_formats/input).
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, messaging]
  - name: Google Cloud PubSub Push
    id: cloud_pubsub_push
    description: |
      This plugin listens for messages sent via an HTTP POST from [Google Cloud
      PubSub](https://cloud.google.com/pubsub) and expects messages in Google's
      Pub/Sub _JSON format_. The plugin allows Telegraf to serve as an endpoint
      of push service.

      Google's PubSub service will __only__ send over HTTPS/TLS so this plugin
      must be behind a valid proxy or must be configured to use TLS by setting
      the `tls_cert` and `tls_key` accordingly.

      Enable mutually authenticated TLS and authorize client connections by
      signing certificate authority by including a list of allowed CA
      certificate file names in `tls_allowed_cacerts`.
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, messaging]
  - name: Amazon CloudWatch Statistics
    id: cloudwatch
    description: |
      This plugin will gather metric statistics from [Amazon
      CloudWatch](https://aws.amazon.com/cloudwatch).
    introduced: v0.12.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Amazon CloudWatch Metric Streams
    id: cloudwatch_metric_streams
    description: |
      This plugin listens for metrics sent via HTTP by [Cloudwatch metric
      streams](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Metric-Streams.html)
      implementing the required [response
      specifications](https://docs.aws.amazon.com/firehose/latest/dev/httpdeliveryrequestresponse.html).

      > [!IMPORTANT]
      > Using this plugin can incure costs, see the _Metric Streams example_ in
      > [CloudWatch pricing](https://aws.amazon.com/cloudwatch/pricing).
    introduced: v1.24.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Netfilter Conntrack
    id: conntrack
    description: |
      This plugin collects metrics from [Netfilter's conntrack
      tools](https://conntrack-tools.netfilter.org/). There are two collection
      mechanisms for this plugin:

      1. Extracting information from `/proc/net/stat/nf_conntrack` files if the
      `collect` option is set accordingly for finding CPU specific values.
      1. Using specific files and directories by specifying the `dirs` option.
      At runtime, conntrack exposes many of those connection statistics within
      `/proc/sys/net`. Depending on your kernel version, these files can be
      found in either `/proc/sys/net/ipv4/netfilter` or
      `/proc/sys/net/netfilter` and will be prefixed with either `ip` or `nf`.

      In order to simplify configuration in a heterogeneous environment, a
      superset of directory and filenames can be specified. Any locations that
      doesn't exist is ignored.
    introduced: v1.0.0
    os_support: [linux]
    tags: [system]
  - name: Hashicorp Consul
    id: consul
    description: |
      This plugin will collect statistics about all health checks registered in
      [Consul](https://www.consul.io) using the [Consul
      API](https://www.consul.io/docs/agent/http/health.html#health_state). The
      plugin will not report any [telemetry
      metrics](https://www.consul.io/docs/agent/telemetry.html) but Consul can
      report those statistics using the StatsD protocol if needed.
    introduced: v1.0.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Hashicorp Consul Agent
    id: consul_agent
    description: |
      This plugin collects metrics from a [Consul
      agent](https://developer.hashicorp.com/consul/commands/agent). Telegraf
      may be present in every node and connect to the agent locally. Tested on
      Consul v1.10.
    introduced: v1.22.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Couchbase
    id: couchbase
    description: |
      This plugin collects metrics from
      [Couchbase](https://www.couchbase.com/), a distributed NoSQL database.
      Metrics are collected for each node, as well as detailed metrics for each
      bucket, for a given couchbase server.
    introduced: v0.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Apache CouchDB
    id: couchdb
    description: |
      This plugin gathers metrics from [Apache
      CouchDB](https://couchdb.apache.org/) instances using the
      [stats](http://docs.couchdb.org/en/1.6.1/api/server/common.html?highlight=stats#get--_stats)
      endpoint.
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: CPU
    id: cpu
    description: |
      This plugin gathers metrics about the system's CPUs.
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Counter-Strike Global Offensive (CSGO)
    id: csgo
    description: |
      This plugin gather metrics from [Counter-Strike: Global
      Offensive](https://www.counter-strike.net/) servers.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Bosch Rexroth ctrlX Data Layer
    id: ctrlx_datalayer
    description: |
      This plugin gathers data from the [ctrlX Data
      Layer](https://ctrlx-automation.com) a communication middleware running
      on Bosch Rexroth's [ctrlX CORE devices](https://ctrlx-core.com). The
      platform is used for professional automation applications like industrial
      automation, building automation, robotics, IoT Gateways or as classical
      PLC.
    introduced: v1.27.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot, messaging]
  - name: Mesosphere Distributed Cloud OS
    id: dcos
    description: |
      This input plugin gathers metrics from a [Distributed Cloud
      OS](https://dcos.io/) cluster's [metrics
      component](https://docs.mesosphere.com/1.10/metrics/).

      > [!WARNING]
      > Depending on the workload of your DC/OS cluster, this plugin can quickly
      > create a high number of series which, when unchecked, can cause high
      > load on your database!
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [containers]
  - name: Directory Monitor
    id: directory_monitor
    description: |
      This plugin monitors a single directory (traversing sub-directories), and
      processes each file placed in the directory. The plugin will gather all
      files in the directory at the configured interval, and parse the ones
      that haven't been picked up yet.

      > [!NOTE]
      > Files should not be used by another process or the plugin may fail.
      > Furthermore, files should not be written _live_ to the monitored
      > directory. If you absolutely must write files directly, they must be
      > guaranteed to finish writing before `directory_duration_threshold`.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Disk
    id: disk
    description: |
      This plugin gathers metrics about disk usage.

      > [!NOTE]
      > The `used_percent` field is calculated by `used / (used + free)` and
      > _not_ `used / total` as the unix `df` command does it. See [wikipedia -
      > df](https://en.wikipedia.org/wiki/Df_(Unix)) for more details.
    introduced: v0.1.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: DiskIO
    id: diskio
    description: |
      This plugin gathers metrics about disk traffic and timing.
    introduced: v0.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Disque
    id: disque
    description: |
      This plugin gathers data from a
      [Disque](https://github.com/antirez/disque) instance, an experimental
      distributed, in-memory, message broker.
    introduced: v0.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Device Mapper Cache
    id: dmcache
    description: |
      This plugin provide a native collection for dmsetup based statistics for
      [dm-cache](https://docs.kernel.org/admin-guide/device-mapper/cache.html).

      > [!NOTE]
      > This plugin requires super-user permissions! Please make sure, Telegraf
      > is able to run `sudo /sbin/dmsetup status --target cache` without
      > requiring a password.
    introduced: v1.3.0
    os_support: [linux]
    tags: [system]
  - name: DNS Query
    id: dns_query
    description: |
      This plugin gathers information about DNS queries such as response time
      and result codes.
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, system]
  - name: Docker
    id: docker
    description: |
      This plugin uses the [Docker Engine
      API](https://docs.docker.com/engine/api) to gather metrics on running
      Docker containers.

      > [!NOTE]
      > Make sure Telegraf has sufficient permissions to access the configured
      > endpoint.
    introduced: v0.1.9
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [containers]
  - name: Docker Log
    id: docker_log
    description: |
      This plugin uses the [Docker Engine
      API](https://docs.docker.com/engine/api) to gather logs from running
      Docker containers.

      > [!NOTE]
      > This plugin works only for containers with the `local` or `json-file` or
      > `journald` logging driver. Make sure Telegraf has sufficient permissions
      > to access the configured endpoint.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [containers, logging]
  - name: Dovecot
    id: dovecot
    description: |
      This plugin uses the Dovecot [v2.1 stats
      protocol](https://doc.dovecot.org/configuration_manual/stats/old_statistics/#old-statistics)
      to gather metrics about configured domains of
      [Dovecot](https://www.dovecot.org/) servers. You can use this plugin on
      Dovecot up to and including version v2.3.x.

      > [!IMPORTANT]
      > Dovecot v2.4+ has the old protocol removed and this plugin will not
      > work. Please use Dovecot's [Openmetrics
      > exporter](https://doc.dovecot.org/latest/core/config/statistics.html#openmetrics)
      > in combination with the [http input
      > plugin](/telegraf/v1/plugins/#input-http) and `openmetrics` data format
      > for newer versions of Dovecot.
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Data Plane Development Kit (DPDK)
    id: dpdk
    description: |
      This plugin collects metrics exposed by applications built with the [Data
      Plane Development Kit](https://www.dpdk.org) which is an extensive set of
      open source libraries designed for accelerating packet processing
      workloads.

      > [!NOTE]
      > Since DPDK will most likely run with root privileges, the telemetry
      > socket exposed by DPDK will also require root access. Please adjust
      > permissions accordingly!

      Refer to the [Telemetry User
      Guide](https://doc.dpdk.org/guides/howto/telemetry.html) for details and
      examples on how to use DPDK in your application.

      > [!IMPORTANT]
      > This plugin uses the `v2` interface to read telemetry > data from
      > applications and required DPDK version `v20.05` or higher. Some metrics
      > might require later versions. The recommended version, especially in
      > conjunction with the `in_memory` option is `DPDK 21.11.2` or higher.
    introduced: v1.19.0
    os_support: [linux]
    tags: [applications, network]
  - name: Amazon Elastic Container Service
    id: ecs
    description: |
      This plugin gathers statistics on running containers in a Task from the
      [Amazon Elastic Container Service](https://aws.amazon.com/ecs/) using the
      [Amazon ECS
      metadata](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-metadata-endpoint.html)
      and the
      [v2](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-metadata-endpoint-v2.html)
      or
      [v3](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-metadata-endpoint-v3.html)
      statistics API endpoints.

      > [!IMPORTANT]
      > The telegraf container must be run in the same Task as the workload it
      > is inspecting.

      The amazon-ecs-agent (though it _is_ a container running on the host) is
      not present in the metadata/stats endpoints.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Elasticsearch
    id: elasticsearch
    description: |
      This plugin queries endpoints of a
      [Elasticsearch](https://www.elastic.co/) instance to obtain [node
      statistics](https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-stats.html)
      and optionally
      [cluster-health](https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html)
      metrics. Additionally, the plugin is able to query
      [cluster](https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-stats.html),
      [indices and
      shard](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-stats.html)
      statistics for the master node.

      > [!NOTE]
      > Specific statistics information can change between Elasticsearch
      > versions. In general, this plugin attempts to stay as version-generic as
      > possible by tagging high-level categories only and creating unique field
      > names of whatever statistics names are provided at the mid-low level.
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Elasticsearch Query
    id: elasticsearch_query
    description: |
      This plugin allows to query an [Elasticsearch](https://www.elastic.co/)
      instance to obtain metrics from data stored in the cluster. The plugins
      supports counting the number of hits for a search query, calculating
      statistics for numeric fields, filtered by a query, aggregated per tag
      and to count the number of terms for a particular field.

      > [!IMPORTANT]
      > This plugins supports Elasticsearch 5.x and 6.x but is known to break on
      > 7.x or higher.
    introduced: v1.20.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Ethtool
    id: ethtool
    description: |
      This plugin collects ethernet device statistics. The available
      information strongly depends on the network device and driver.
    introduced: v1.13.0
    os_support: [linux]
    tags: [network, system]
  - name: Azure Event Hub Consumer
    id: eventhub_consumer
    description: |
      This plugin allows consuming messages from [Azure Event
      Hubs](https://learn.microsoft.com/en-us/azure/event-hubs/event-hubs-about)
      and [Azure IoT Hub](https://azure.microsoft.com/en-us/products/iot-hub)
      instances.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot, messaging]
  - name: Exec
    id: exec
    description: |
      This plugin executes the given `commands` on every interval and parses
      metrics from their output in any one of the supported [data
      formats](/telegraf/v1/data_formats/input). This plugin can be used to
      poll for custom metrics from any source.
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Execd
    id: execd
    description: |
      This plugin runs the given external program as a long-running daemon and
      collects the metrics in one of the supported [data
      formats](/telegraf/v1/data_formats/input) on the process's `stdout`. The
      program is expected to stay running and output data when receiving the
      configured `signal`.

      The `stderr` output of the process will be relayed to Telegraf's logging
      facilities and will be logged as _error_ by default. However, you can log
      to other levels by prefixing your message with `E!` for error, `W!` for
      warning, `I!` for info, `D!` for debugging and `T!` for trace levels
      followed by a space and the actual message. For example outputting `I! A
      log message` will create a `info` log line in your Telegraf logging
      output.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Fail2ban
    id: fail2ban
    description: |
      This plugin gathers the count of failed and banned IP addresses using
      [fail2ban](https://www.fail2ban.org) by running the `fail2ban-client`
      command.

      > [!NOTE]
      > The `fail2ban-client` requires root access, so please make sure to
      > either allow Telegraf to run that command using `sudo` without a
      > password or by running telegraf as root (not recommended).
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, system]
  - name: Fibaro
    id: fibaro
    description: |
      This plugin gathers data from devices connected to a
      [Fibaro](https://www.fibaro.com) controller. Those values could be true
      (1) or false (0) for switches, percentage for dimmers, temperature, etc.
      Both _Home Center 2_ and _Home Center 3_ devices are supported.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: File
    id: file
    description: |
      This plugin reads the __complete__ contents of the configured files in
      __every__ interval. The file content is split line-wise and parsed
      according to one of the supported [data
      formats](/telegraf/v1/data_formats/input).

      > [!TIP]
      > If you wish to only process newly appended lines use the
      > [tail](/telegraf/v1/plugins/#input-tail) input plugin instead.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Filecount
    id: filecount
    description: |
      This plugin reports the number and total size of files in specified
      directories.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: File statistics
    id: filestat
    description: |
      This plugin gathers metrics about file existence, size, and other file
      statistics.
    introduced: v0.13.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Fireboard
    id: fireboard
    description: |
      This plugin gathers real-time temperature data from
      [fireboard](https://www.fireboard.com) thermometers.

      > [!NOTE]
      > You will need to sign up to for the [Fireboard REST
      > API](https://docs.fireboard.io/reference/restapi.html) in order to use
      > this plugin.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: AWS Data Firehose
    id: firehose
    description: |
      This plugin listens for metrics sent via HTTP from [AWS Data
      Firehose](https://aws.amazon.com/de/firehose/) in one of the supported
      [data formats](/telegraf/v1/data_formats/input). The plugin strictly
      follows the request-response schema as describe in the official
      [documentation](https://docs.aws.amazon.com/firehose/latest/dev/httpdeliveryrequestresponse.html).
    introduced: v1.34.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, messaging]
  - name: Fluentd
    id: fluentd
    description: |
      This plugin gathers internal metrics of a
      [fluentd](https://www.fluentd.org/) instance provided by fluentd's
      [monitor agent plugin](https://docs.fluentd.org/input/monitor_agent).
      Data provided by the `/api/plugin.json` resource, `/api/config.json` is
      not covered.

      > [!IMPORTANT]
      > This plugin might produce high-cardinality series as the `plugin_id`
      > value is random after each restart of fluentd. You might need to adjust
      > your fluentd configuration, in order to reduce series cardinality in
      > case your fluentd restarts frequently by adding the `@id` parameter to
      > each plugin. See [fluentd's
      > documentation](https://docs.fluentd.org/configuration/config-file#common-plugin-parameter)
      > for details.
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Fritzbox
    id: fritzbox
    description: |
      This plugin gathers status information from [AVM](https://en.avm.de/)
      devices (routers, repeaters, etc) using the device's
      [TR-064](https://avm.de/service/schnittstellen/) interface.
    introduced: v1.35.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot, network]
  - name: GitHub
    id: github
    description: |
      This plugin gathers information from projects and repositories hosted on
      [GitHub](https://www.github.com).

      > [!NOTE]
      > Telegraf also contains the [webhook input
      > plugin](/telegraf/v1/plugins/#input-webhooks) which can be used as an
      > alternative method for collecting repository information.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: gNMI (gRPC Network Management Interface)
    id: gnmi
    description: |
      This plugin consumes telemetry data based on
      [gNMI](https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md)
      subscriptions. TLS is supported for authentication and encryption. This
      plugin is vendor-agnostic and is supported on any platform that supports
      the gNMI specification.

      For Cisco devices the plugin has been optimized to support gNMI telemetry
      as produced by Cisco IOS XR (64-bit) version 6.5.1, Cisco NX-OS 9.3 and
      Cisco IOS XE 16.12 and later.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Google Cloud Storage
    id: google_cloud_storage
    description: |
      This plugin will collect metrics from the given [Google Cloud
      Storage](https://cloud.google.com/storage) buckets in any of the
      supported [data formats](/telegraf/v1/data_formats/input).
    introduced: v1.25.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: GrayLog
    id: graylog
    description: |
      This plugin collects data from [Graylog servers](https://graylog.org/),
      currently supporting two type of end points `multiple` (e.g.
      `http://<host>:9000/api/system/metrics/multiple`) and `namespace` (e.g.
      `http://<host>:9000/api/system/metrics/namespace/{namespace}`).

      Multiple endpoint can be queried and mixing `multiple` and serveral
      `namespace` end points is possible. Check
      `http://<host>:9000/api/api-browser` for the full list of available
      endpoints.

      > [!NOTE]
      > When specifying a `namespace` endpoint without an actual namespace, the
      > metrics array will be ignored.
    introduced: v1.0.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [logging]
  - name: HAProxy
    id: haproxy
    description: |
      This plugin gathers statistics of [HAProxy](http://www.haproxy.org/)
      servers using sockets or the HTTP protocol.
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, server]
  - name: HDDtemp
    id: hddtemp
    description: |
      This plugin reads data from a
      [hddtemp](https://savannah.nongnu.org/projects/hddtemp/) daemon.

      > [!IMPORTANT]
      > This plugin requires `hddtemp` to be installed and running as a daemon.

      As the upstream project is not activly maintained anymore and various
      distributions (e.g. Debian Bookwork and later) don't ship packages for
      `hddtemp` anymore, the binary might not be available (e.g. in Ubuntu
      22.04 or later).

      > [!TIP]
      > As an alternative consider using the
      > [smartctl](/telegraf/v1/plugins/#input-smartctl) relying on SMART
      > information or [sensors](/telegraf/v1/plugins/#input-sensors) plugins to
      > retrieve temperature data of your hard-drive.
    introduced: v1.0.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, system]
  - name: HTTP
    id: http
    description: |
      This plugin collects metrics from one or more HTTP endpoints providing
      data in one of the supported [data
      formats](/telegraf/v1/data_formats/input).
    introduced: v1.6.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, server]
  - name: HTTP Listener v2
    id: http_listener_v2
    description: |
      This plugin listens for metrics sent via HTTP in any of the supported
      [data formats](/telegraf/v1/data_formats/input).

      > [!NOTE]
      > If you would like Telegraf to act as a proxy/relay for InfluxDB v1 or
      > InfluxDB v2 it is recommended to use the [influxdb__listener]() or
      > [influxdb_v2_listener]() plugin instead.
    introduced: v1.9.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: HTTP Response
    id: http_response
    description: |
      This plugin generates metrics from HTTP responses including the status
      code and response statistics.
    introduced: v0.12.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: HueBridge
    id: huebridge
    description: |
      This plugin gathers status from [Hue
      Bridge](https://www.philips-hue.com/) devices using the [CLIP
      API](https://developers.meethue.com/develop/hue-api-v2/) interface of the
      devices.
    introduced: v1.34.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: Hugepages
    id: hugepages
    description: |
      This plugin gathers metrics from the Linux' [Transparent Huge Pages (THP)
      memory management
      system](https://www.kernel.org/doc/html/latest/admin-guide/mm/hugetlbpage.html)
      that reduces the overhead of Translation Lookaside Buffer (TLB) lookups
      on machines with large amounts of memory.
    introduced: v1.22.0
    os_support: [linux]
    tags: [system]
  - name: Icinga2
    id: icinga2
    description: |
      This plugin gather services and hosts status information using the
      [Icinga2 remote
      API](https://docs.icinga.com/icinga2/latest/doc/module/icinga2/chapter/icinga2-api).
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, server, system]
  - name: InfiniBand
    id: infiniband
    description: |
      This plugin gathers statistics for all InfiniBand devices and ports on
      the system. These are the counters that can be found in
      `/sys/class/infiniband/<dev>/port/<port>/counters/` and RDMA counters can
      be found in `/sys/class/infiniband/<dev>/ports/<port>/hw_counters/`
    introduced: v1.14.0
    os_support: [linux]
    tags: [network]
  - name: InfluxDB
    id: influxdb
    description: |
      This plugin collects metrics on the given InfluxDB v1 servers from the
      `/debug/vars` endpoint. Read the
      [documentation](https://docs.influxdata.com/platform/monitoring/influxdata-platform/tools/measurements-internal/)
      for detailed information about `influxdb` metrics.

      Additionally, this plugin can gather metrics from endpoints exposing
      InfluxDB-formatted endpoints.

      > [!TIP]
      > To gather [InfluxDB v2
      > metrics](https://docs.influxdata.com/influxdb/latest/reference/internals/metrics/)
      > use the [prometheus plugin](/telegraf/v1/plugins/#input-prometheus)
      > with[[inputs.prometheus]] urls = ["http://localhost:8086/metrics"]
      > metric_version = 1
    introduced: v0.2.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: InfluxDB Listener
    id: influxdb_listener
    description: |
      This plugin listens for requests sent according to the [InfluxDB HTTP v1
      API](https://docs.influxdata.com/influxdb/v1.8/guides/write_data/). This
      allows Telegraf to serve as a proxy/router for the `/write` endpoint of
      the InfluxDB HTTP API.

      > [!NOTE]
      > This plugin was previously known as `http_listener`. If you wish to send
      > general metrics via HTTP it is recommended to use the
      > [`http_listener_v2`]() instead.

      The `/write` endpoint supports the `precision` query parameter and can be
      set to one of `ns`, `u`, `ms`, `s`, `m`, `h`. All other parameters are
      ignored and defer to the output plugins configuration.

      > [!IMPORTANT]
      > When chaining Telegraf instances using this plugin, `CREATE DATABASE`
      > requests receive a `200 OK` response with message body `{"results":[]}`
      > but they are not relayed. The configuration of the output plugin
      > ultimately submits data to InfluxDB determines the destination database.
    introduced: v1.9.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: InfluxDB V2 Listener
    id: influxdb_v2_listener
    description: |
      This plugin listens for requests sent according to the [InfluxDB HTTP v2
      API](https://docs.influxdata.com/influxdb/v2/api/). This allows Telegraf
      to serve as a proxy/router for the `/api/v2/write` endpoint of the
      InfluxDB HTTP API.

      The `/api/v2/write` endpoint supports the `precision` query parameter and
      can be set to one of `ns`, `us`, `ms`, `s`. All other parameters are
      ignored and defer to the output plugins configuration.
    introduced: v1.16.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Intel Baseband Accelerator
    id: intel_baseband
    description: |
      This plugin collects metrics from both dedicated and integrated Intel
      devices providing Wireless Baseband hardware acceleration. These devices
      play a key role in accelerating 5G and 4G Virtualized Radio Access
      Networks (vRAN) workloads, increasing the overall compute capacity of
      commercial, off-the-shelf platforms by integrating e.g.

      - Forward Error Correction (FEC) processing,
      - 4G Turbo FEC processing,
      - 5G Low Density Parity Check (LDPC)
      - Fast Fourier Transform (FFT) block providing DFT/iDFT processing offload
      for the 5G Sounding Reference Signal (SRS)
    introduced: v1.27.0
    os_support: [linux]
    tags: [hardware, network, system]
  - name: Intel® Dynamic Load Balancer
    id: intel_dlb
    description: |
      This plugin collects metrics exposed by applications built with the [Data
      Plane Development Kit](https://www.dpdk.org/), an extensive set of open
      source libraries designed for accelerating packet processing workloads,
      plugin is also using bifurcated driver. More specifically it's targeted
      for applications using Intel DLB as eventdev devices accessed via
      bifurcated driver (allowing access from kernel and user-space).
    introduced: v1.25.0
    os_support: [linux]
    tags: [applications]
  - name: Intel® Platform Monitoring Technology
    id: intel_pmt
    description: |
      This plugin collects metrics via the Linux kernel driver for Intel®
      Platform Monitoring Technology (Intel® PMT), an architecture capable of
      enumerating and accessing hardware monitoring capabilities on supported
      devices.
    introduced: v1.28.0
    os_support: [linux]
    tags: [hardware, system]
  - name: Intel Performance Monitoring Unit
    id: intel_pmu
    description: |
      This plugin gathers Intel Performance Monitoring Unit metrics available
      via the [Linux Perf](https://perf.wiki.kernel.org/index.php/Main_Page)
      subsystem.

      PMU metrics provide insights into performance and health of IA
      processors' internal components, including core and uncore units. With
      the number of cores increasing and processor topology getting more
      complex the insight into those metrics is vital to assure the best CPU
      performance and utilization.

      Performance counters are CPU hardware registers that count hardware
      events such as instructions executed, cache-misses suffered, or branches
      mispredicted. They form a basis for profiling applications to trace
      dynamic control flow and identify hotspots.
    introduced: v1.21.0
    os_support: [linux]
    tags: [hardware, system]
  - name: Intel PowerStat
    id: intel_powerstat
    description: |
      This plugin gathers power statistics on Intel-based platforms providing
      insights into power saving and workload migration. Those are beneficial
      for Monitoring and Analytics systems to take preventive or corrective
      actions based on platform busyness, CPU temperature, actual CPU
      utilization and power statistics.
    introduced: v1.17.0
    os_support: [linux]
    tags: [hardware, system]
  - name: Intel RDT
    id: intel_rdt
    description: |
      This plugin collects information provided by monitoring features of the
      [Intel Resource Director
      Technology](https://www.intel.com/content/www/us/en/architecture-and-technology/resource-director-technology.html),
      a hardware framework to monitor and control the utilization of shared
      resources (e.g. last level cache, memory bandwidth).

      Intel’s Resource Director Technology (RDT) framework consists of:

      - Cache Monitoring Technology (CMT)
      - Memory Bandwidth Monitoring (MBM)
      - Cache Allocation Technology (CAT)
      - Code and Data Prioritization (CDP)

      As multithreaded and multicore platform architectures emerge, the last
      level cache and memory bandwidth are key resources to manage for running
      workloads in single-threaded, multithreaded, or complex virtual machine
      environments. Intel introduces CMT, MBM, CAT and CDP to manage these
      workloads across shared resources.
    introduced: v1.16.0
    os_support: [freebsd, linux, macos]
    tags: [hardware, system]
  - name: Telegraf Internal
    id: internal
    description: |
      This plugin collects metrics about the telegraf agent and its plugins.

      > [!NOTE]
      > Some metrics are aggregates across all instances of a plugin type.
    introduced: v1.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: Internet Speed Monitor
    id: internet_speed
    description: |
      This plugin collects metrics about the internet speed on the system like
      download/upload speed, latency etc using the [speedtest.net
      service](https://www.speedtest.net/).
    introduced: v1.20.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Interrupts
    id: interrupts
    description: |
      This plugin gathers metrics about IRQs from interrupts
      (`/proc/interrupts`) and soft-interrupts (`/proc/softirqs`).
    introduced: v1.3.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: IPMI Sensor
    id: ipmi_sensor
    description: |
      This plugin gathers metrics from the [Intelligent Platform Management
      Interface](https://www.intel.com/content/dam/www/public/us/en/documents/specification-updates/ipmi-intelligent-platform-mgt-interface-spec-2nd-gen-v2-0-spec-update.pdf)
      using the [`ipmitool`]() command line utility.

      > [!IMPORTANT]
      > The `ipmitool` requires access to the IPMI device. Please check the
      > permission section for possible solutions.
    introduced: v0.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, system]
  - name: Ipset
    id: ipset
    description: |
      This plugin gathers packets and bytes counters from [Linux IP
      sets](https://ipset.netfilter.org/) using the `ipset` command line tool.

      > [!NOTE]
      > IP sets created without the "counters" option are ignored.
    introduced: v1.6.0
    os_support: [linux]
    tags: [network, system]
  - name: Iptables
    id: iptables
    description: |
      This plugin gathers packets and bytes counters for rules within a set of
      table and chain from the Linux's iptables firewall.

      > [!IMPORTANT]
      > Rules are identified through associated comment, so you must ensure that
      > the rules you want to monitor do have a **unique** comment using the
      > `--comment` flag when adding them. Rules without comments are ignored.

      The rule number cannot be used as identifier as it is not constant and
      may vary when rules are inserted/deleted at start-up or by automatic
      tools (interactive firewalls, fail2ban, ...).

      > [!IMPORTANT]
      > The `iptables` command requires `CAP_NET_ADMIN` and `CAP_NET_RAW`
      > capabilities. Check the permissions section for ways to grant them.
    introduced: v1.1.0
    os_support: [linux]
    tags: [network, system]
  - name: IPVS
    id: ipvs
    description: |
      This plugin gathers metrics about the [IPVS virtual and real
      servers](http://www.linuxvirtualserver.org/software/ipvs.html) using the
      netlink socket interface of the Linux kernel.

      > [!IMPORTANT]
      > The plugin requires `CAP_NET_ADMIN` and `CAP_NET_RAW` capabilities.
      > Check the permissions section for ways to grant them.
    introduced: v1.9.0
    os_support: [linux]
    tags: [network, system]
  - name: Jenkins
    id: jenkins
    description: |
      This plugin gathers information about the nodes and jobs running in a
      [Jenkins](https://www.jenkins.io/) instance. The plugin uses the Jenkins
      API and does not require a plugin on the server.
    introduced: v1.9.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: Jolokia2 Agent
    id: jolokia2_agent
    description: |
      This plugin reads JMX metrics from one or more [Jolokia
      agent](https://jolokia.org/agent/jvm.html) REST endpoints.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, network]
  - name: Jolokia2 Proxy
    id: jolokia2_proxy
    description: |
      This plugin reads JMX metrics from one or more _targets_ by interacting
      with a [Jolokia proxy](https://jolokia.org/features/proxy.html) REST
      endpoint.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, network]
  - name: Juniper Telemetry
    id: jti_openconfig_telemetry
    description: |
      This service plugin reads [OpenConfig](http://openconfig.net/) telemetry
      data via the [Junos Telemetry Interface
      (JTI)](https://www.juniper.net/documentation/en_US/junos/topics/concept/junos-telemetry-interface-oveview.html)
      from configured from listed sensors.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot, network]
  - name: Apache Kafka Consumer
    id: kafka_consumer
    description: |
      This service plugin consumes messages from [Kafka
      brokers](https://kafka.apache.org) in one of the supported [data
      formats](/telegraf/v1/data_formats/input). The plugin uses [consumer
      groups](http://godoc.org/github.com/wvanbergen/kafka/consumergroup) when
      talking to the Kafka cluster so multiple instances of Telegraf can
      consume messages from the same topic in parallel.
    introduced: v0.2.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Kapacitor
    id: kapacitor
    description: |
      This plugin collects metrics from the configured [InfluxData
      Kapacitor](https://www.influxdata.com/time-series-platform/kapacitor/)
      instances.
    introduced: v1.3.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: Kernel
    id: kernel
    description: |
      This plugin gathers metrics about the [Linux kernel](https://kernel.org/)
      including, among others, the [available
      entropy](https://www.kernel.org/doc/html/latest/admin-guide/sysctl/kernel.html#random),
      [Kernel Samepage
      Merging](https://www.kernel.org/doc/html/latest/mm/ksm.html) and
      [Pressure Stall
      Information](https://www.kernel.org/doc/html/latest/accounting/psi.html).
    introduced: v0.11.0
    os_support: [linux]
    tags: [system]
  - name: Kernel VM Statistics
    id: kernel_vmstat
    description: |
      This plugin gathers virtual memory statistics of the [Linux
      kernel](https://kernel.org/) by reading `/proc/vmstat`. For a full list
      of available fields check the `/proc/vmstat` section of the [proc man
      page](http://man7.org/linux/man-pages/man5/proc.5.html) and for a
      detailed description about the fields see the [vmstat man
      page](https://man7.org/linux/man-pages/man8/vmstat.8.html).
    introduced: v1.0.0
    os_support: [linux]
    tags: [system]
  - name: Kibana
    id: kibana
    description: |
      This plugin collects metrics about service status from
      [Kibana](https://www.elastic.co/kibana) instances via the server's API.

      > [!NOTE]
      > This plugin requires Kibana version 6.0+.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, server]
  - name: Kinesis Consumer
    id: kinesis_consumer
    description: |
      This service input plugin consumes messages from [AWS
      Kinesis](https://aws.amazon.com/kinesis/) data stream in one of the
      supported [data formats](/telegraf/v1/data_formats/input).
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot, messaging]
  - name: KNX
    id: knx_listener
    description: |
      This service plugin listens for messages on the [KNX home-automation
      bus](https://www.knx.org) by connecting via a KNX-IP interface.
      Information about supported KNX datapoint-types can be found at the
      underlying [`knx-go` project]().
    introduced: v1.19.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: Kubernetes Inventory
    id: kube_inventory
    description: |
      This plugin gathers metrics from [Kubernetes](https://kubernetes.io/)
      resources.

      > [!NOTE]
      > This plugin requires Kubernetes version 1.11+.

      The gathered resources include for example daemon sets, deployments,
      endpoints, ingress, nodes, persistent volumes and many more.

      > [!CRITICAL]
      > This plugin produces high cardinality data, which when not controlled
      > for will cause high load on your database. Please make sure to
      > [filter](/telegraf/v1/configuration/#metric-filtering) the produced
      > metrics or configure your database to avoid cardinality issues!
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [containers]
  - name: Kubernetes
    id: kubernetes
    description: |
      This plugin gathers metrics about running pods and containers of a
      [Kubernetes](https://kubernetes.io/) instance via the Kubelet API.

      > [!NOTE]
      > This plugin has to run as part of a `daemonset` within a Kubernetes
      > installation, i.e. Telegraf is running on every node within the cluster.

      You should configure this plugin to talk to its locally running kubelet.

      > [!CRITICAL]
      > This plugin produces high cardinality data, which when not controlled
      > for will cause high load on your database. Please make sure to
      > [filter](/telegraf/v1/configuration/#metric-filtering) the produced
      > metrics or configure your database to avoid cardinality issues!
    introduced: v1.1.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [containers]
  - name: Arista LANZ Consumer
    id: lanz
    description: |
      This service plugin consumes messages from the [Arista Networks’
      Latency Analyzer
      (LANZ)](https://www.arista.com/en/um-eos/eos-latency-analyzer-lanz) by
      receiving the datastream on TCP (usually through port 50001) on the
      switch's management IP.

      > [!NOTE]
      > You will need to configure LANZ and enable streaming LANZ data, see the
      > [documentation](https://www.arista.com/en/um-eos/eos-section-44-3-configuring-lanz)
      > for more details.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: LDAP
    id: ldap
    description: |
      This plugin gathers metrics from LDAP servers' monitoring (`cn=Monitor`)
      backend. Currently this plugin supports
      [OpenLDAP](https://www.openldap.org/devel/admin/monitoringslapd.html) and
      [389ds](https://www.port389.org/) servers.
    introduced: v1.29.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, server]
  - name: LeoFS
    id: leofs
    description: |
      This plugin gathers metrics of the [LEO
      filesystem](https://leo-project.net/leofs/) services _LeoGateway_,
      _LeoManager_, and _LeoStorage_ via SNMP. Check the [LeoFS system
      monitoring
      documentation](https://leo-project.net/leofs/docs/admin/system_admin/monitoring/)
      for details.
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, server]
  - name: Libvirt
    id: libvirt
    description: |
      This plugin collects statistics about virtualized guests on a system by
      using the [libvirt](https://libvirt.org/) virtualization API. Metrics are
      gathered directly from the hypervisor on a host system, so Telegraf
      doesn't have to be installed and configured on a guest system.
    introduced: v1.25.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Linux CPU
    id: linux_cpu
    description: |
      This plugin gathers CPU metrics exposed on [Linux](https://kernel.org/)
      systems.
    introduced: v1.24.0
    os_support: [linux]
    tags: [system]
  - name: Linux Sysctl Filesystem
    id: linux_sysctl_fs
    description: |
      This plugin gathers metrics by reading the [system
      filesystem](https://www.kernel.org/doc/Documentation/sysctl/fs.txt) files
      on [Linux](https://kernel.org/) systems.
    introduced: v1.24.0
    os_support: [linux]
    tags: [system]
  - name: Logstash
    id: logstash
    description: |
      This plugin gathers metrics from a
      [Logstash](https://www.elastic.co/logstash) endpoint using the
      [Monitoring
      API](https://www.elastic.co/guide/en/logstash/current/monitoring-logstash.html).

      > [!NOTE]
      > This plugin supports Logstash 5+.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Lustre
    id: lustre2
    description: |
      This plugin gathers metrics for the [Lustre® file
      system](http://lustre.org/) using its entries in the `proc` filesystem.
      Reference the [Lustre Monitoring and Statistics
      Guide](http://wiki.lustre.org/Lustre_Monitoring_and_Statistics_Guide) for
      the reported information.

      > [!NOTE]
      > This plugin doesn't report _all_ information available but only a
      > limited set of items. Check the metrics section.
    introduced: v0.1.5
    os_support: [linux]
    tags: [system]
  - name: Logical Volume Manager
    id: lvm
    description: |
      This plugin collects information about physical volumes, volume groups
      and logical volumes from the Logical Volume Management (LVM) of the
      [Linux kernel](https://www.kernel.org/).
    introduced: v1.21.0
    os_support: [linux]
    tags: [system]
  - name: Mailchimp
    id: mailchimp
    description: |
      This plugin gathers metrics from the [Mailchimp](https://mailchimp.com)
      service using the [Mailchimp API](https://developer.mailchimp.com/).
    introduced: v0.2.4
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, web]
  - name: MarkLogic
    id: marklogic
    description: |
      This plugin gathers health status metrics from one or more
      [MarkLogic](https://www.progress.com/marklogic) hosts.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: MavLink
    id: mavlink
    description: |
      This plugin collects metrics from
      [MavLink](https://mavlink.io/)-compatible flight controllers such as
      [ArduPilot](https://ardupilot.org/) or [PX4](https://px4.io/) to live
      ingest flight metrics from unmanned systems (drones, planes, boats, etc.)
      Currently the ArduPilot-specific Mavlink dialect is used, check the
      [Mavlink
      documentation](https://mavlink.io/en/messages/ardupilotmega.html) for
      more details and the various messages available.

      > [!WARNING]
      > This plugin potentially generates a large amount of data. If your output
      > plugin cannot handle the rate of messages, use [Metric
      > filters](/telegraf/v1/configuration/#metric-filtering) to limit the
      > metrics written to outputs, and/or the `filters` configuration parameter
      > to limit which Mavlink messages this plugin parses.
    introduced: v1.35.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: Mcrouter
    id: mcrouter
    description: |
      This plugin gathers statistics data from
      [Mcrouter](https://github.com/facebook/mcrouter) instances, a protocol
      router, developed and maintained by Facebook, for scaling
      [memcached](http://memcached.org/) deployments.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, network]
  - name: MD RAID Statistics
    id: mdstat
    description: |
      This plugin gathers statistics about any [Linux MD RAID
      arrays](https://docs.kernel.org/admin-guide/md.html) configured on the
      host by reading `/proc/mdstat`. For a full list of available fields see
      the `/proc/mdstat` section of the [proc man
      page](http://man7.org/linux/man-pages/man5/proc.5.html). For details on
      the fields check the [mdstat
      wiki](https://raid.wiki.kernel.org/index.php/Mdstat).
    introduced: v1.20.0
    os_support: [linux]
    tags: [system]
  - name: Memory
    id: mem
    description: |
      This plugin collects metrics about the system memory.

      > [!TIP]
      > For an explanation of the difference between *used* and *actual_used*
      > RAM, see [Linux ate my ram](http://www.linuxatemyram.com/).
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Memcached
    id: memcached
    description: |
      This plugin gathers statistics data from
      [Memcached](https://memcached.org/) instances.
    introduced: v0.1.2
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Apache Mesos
    id: mesos
    description: |
      This plugin gathers metrics from [Apache
      Mesos](https://mesos.apache.org/) instances. For more information, please
      check the [Mesos Observability
      Metrics](http://mesos.apache.org/documentation/latest/monitoring/) page.
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [containers]
  - name: Minecraft
    id: minecraft
    description: |
      This plugin collects score metrics from a
      [Minecraft](https://www.minecraft.net/) server using the RCON protocol.

      > [!NOTE]
      > This plugin supports Minecraft Java Edition versions 1.11 - 1.14. When
      > using a version earlier than 1.13, be aware that the values for some
      > criteria has changed and need to be modified.
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Mock Data
    id: mock
    description: |
      The plugin generates mock-metrics based on different algorithms like
      sine-wave functions, random numbers and more with the configured names
      and tags. Those metrics are usefull during testing (e.g. processors) or
      if random data is required.
    introduced: v1.22.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [testing]
  - name: Modbus
    id: modbus
    description: |
      This plugin collects data from [Modbus](https://www.modbus.org/)
      registers using e.g. Modbus TCP or serial interfaces with Modbus RTU or
      Modbus ASCII.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: MongoDB
    id: mongodb
    description: |
      This plugin collects metrics about [MongoDB](https://www.mongodb.com)
      server instances by running database commands.

      > [!NOTE]
      > This plugin supports all versions marked as supported in the [MongoDB
      > Software Lifecycle
      > Schedules](https://www.mongodb.com/support-policy/lifecycles).
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Monit
    id: monit
    description: |
      This plugin gathers metrics and status information about local processes,
      remote hosts, files, file systems, directories and network interfaces
      managed and watched over by [Monit](https://mmonit.com/).

      > [!NOTE]
      > The plugin supports Monit version 5.16+. To use this plugin you have to
      > enable the [HTTPD TCP
      > port](https://mmonit.com/monit/documentation/monit.html#TCP-PORT) in
      > Monit.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: MQTT Consumer
    id: mqtt_consumer
    description: |
      This service plugin consumes messages from [MQTT](https://mqtt.org)
      brokers for the configured topics in one of the supported [data
      formats](/telegraf/v1/data_formats/input).
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Multifile
    id: multifile
    description: |
      This plugin reads the combined data from multiple files into a single
      metric, creating one field or tag per file. This is often useful creating
      custom metrics from the `/sys` or `/proc` filesystems.

      > [!NOTE]
      > To parse metrics from a single file you should use the
      > [file](/telegraf/v1/plugins/#input-file) input plugin instead.
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: MySQL
    id: mysql
    description: |
      This plugin gathers statistics from [MySQL](https://www.mysql.com/)
      server instances.

      > [!NOTE]
      > To gather metrics from the performance schema, it must first be enabled
      > in MySQL. See the performance schema [quick
      > start](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-quick-start.html)
      > for details.
    introduced: v0.1.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: NATS Server Monitoring
    id: nats
    description: |
      This plugin gathers metrics of a [NATS](http://www.nats.io) server
      instance using its [monitoring
      endpoints](https://docs.nats.io/running-a-nats-service/nats_admin/monitoring).
    introduced: v1.6.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: NATS Consumer
    id: nats_consumer
    description: |
      This service plugin consumes messages from
      [NATS](https://www.nats.io/about/) instances in one of the supported
      [data formats](/telegraf/v1/data_formats/input). A [Queue
      Group](https://www.nats.io/documentation/concepts/nats-queueing/) is used
      when subscribing to subjects so multiple instances of telegraf can
      consume messages in parallel. The plugin supports authenticating via
      [username/password](https://docs.nats.io/using-nats/developer/connecting/userpass),
      a [credentials
      file](https://docs.nats.io/using-nats/developer/connecting/creds) (NATS
      2.0), or an [nkey seed
      file](https://docs.nats.io/using-nats/developer/connecting/nkey) (NATS
      2.0).
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Neoom Beaam
    id: neoom_beaam
    description: |
      This plugin gathers metrics from a [Neoom Beaam
      gateway](https://neoom.com/en/products/beaam) using the [Beaam
      API](https://developer.neoom.com/reference/concepts-terms-1) with access
      token that can be created in the Neoom web interface. Please follow the
      [developer instructions](https://neoom.com/developers) to create the
      token.
    introduced: v1.33.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: Neptune Apex
    id: neptune_apex
    description: |
      This plugin gathers metrics from [Neptune Apex
      controller](https://www.neptunesystems.com) instances, allowing aquarium
      hobbyists to monitor and control their tanks based on various probes.
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: Network
    id: net
    description: |
      This plugin gathers metrics about network interface and protocol usage.
    introduced: v0.1.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Network Response
    id: net_response
    description: |
      This plugin tests UDP/TCP connection and produces metrics from the
      result, the response time and optionally verifies text in the response.
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Netflow
    id: netflow
    description: |
      This service plugin acts as a collector for Netflow v5, Netflow v9 and
      IPFIX flow information. The Layer 4 protocol numbers are gathered from
      the [official IANA
      assignments](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
      The internal field mappings for Netflow v5 fields are defined according
      to [Cisco's Netflow v5
      documentation](https://www.cisco.com/c/en/us/td/docs/net_mgmt/netflow_collection_engine/3-6/user/guide/format.html#wp1006186),
      Netflow v9 fields are defined according to [Cisco's Netflow v9
      documentation](https://www.cisco.com/en/US/technologies/tk648/tk362/technologies_white_paper09186a00800a3db9.html)
      and the [ASA
      extensions](https://www.cisco.com/c/en/us/td/docs/security/asa/special/netflow/asa_netflow.html).
      Definitions for IPFIX are according to [IANA assignment
      document](https://www.iana.org/assignments/ipfix/ipfix.xhtml#ipfix-nat-type).
    introduced: v1.25.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Network Connection Statistics
    id: netstat
    description: |
      This plugin collects statistics about TCP connection states and UDP
      socket counts.
    introduced: v0.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Network Filesystem
    id: nfsclient
    description: |
      This plugin collects metrics about operations on [Network
      Filesystem](https://www.ietf.org/rfc/rfc1813.txt?number=1813) mounts. By
      default, only a limited number of general system-level metrics are
      collected, including basic read/write counts but more detailed metrics
      can be enabled.

      > [!NOTE]
      > Many of the metrics, even if tagged with a mount point, are really
      > _per-server_. E.g. if you mount two shares: `nfs01:/vol/foo/bar` and
      > `nfs01:/vol/foo/baz`, there will be two near identical entries in
      > `/proc/self/mountstats`. This is a limitation of the metrics exposed by
      > the kernel, not by this plugin.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, system]
  - name: Nginx
    id: nginx
    description: |
      This plugin gathers metrics from the open source [Nginx web
      server](https://www.nginx.com). Nginx Plus is a commercial version. For
      more information about differences between Nginx (F/OSS) and Nginx Plus,
      see the Nginx
      [documentation](https://www.nginx.com/blog/whats-difference-nginx-foss-nginx-plus/).
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Nginx Plus
    id: nginx_plus
    description: |
      This plugin gathers metrics from the commercial [Nginx Plus web
      server](https://www.f5.com/products/nginx/nginx-plus) via the [status
      module](http://nginx.org/en/docs/http/ngx_http_status_module.html).

      > [!NOTE]
      > Using this plugin requires a license.

      For more information about differences between Nginx (F/OSS) and Nginx
      Plus, see the Nginx
      [documentation](https://www.nginx.com/blog/whats-difference-nginx-foss-nginx-plus/).
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Nginx Plus API
    id: nginx_plus_api
    description: |
      This plugin gathers metrics from the commercial [Nginx Plus web
      server](https://www.f5.com/products/nginx/nginx-plus) via the [REST
      API](https://demo.nginx.com/swagger-ui/).

      > [!NOTE]
      > Using this plugin requires a license.

      For more information about differences between Nginx (F/OSS) and Nginx
      Plus, see the Nginx
      [documentation](https://www.nginx.com/blog/whats-difference-nginx-foss-nginx-plus/).
    introduced: v1.9.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Nginx Stream Server Traffic
    id: nginx_sts
    description: |
      This plugin gathers metrics from the [Nginx web
      server](https://www.nginx.com) using the [external stream server traffic
      status module](https://github.com/vozlt/nginx-module-sts). This module
      provides access to stream host status information containing the current
      status of servers, upstreams and caches, similar to the live activity
      monitoring of Nginx plus. For module configuration details please see the
      [module
      documentation](https://github.com/vozlt/nginx-module-sts#synopsis).
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Nginx Upstream Check
    id: nginx_upstream_check
    description: |
      This plugin gathers metrics from the [Nginx web
      server](https://www.nginx.com) using the [upstream check
      module](https://github.com/yaoweibin/nginx_upstream_check_module). This
      module periodically sends the configured requests to servers in the
      Nginx's upstream determining their availability.
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Nginx Virtual Host Traffic
    id: nginx_vts
    description: |
      This plugin gathers metrics from the [Nginx web
      server](https://www.nginx.com) using the [external virtual host traffic
      status module](https://github.com/vozlt/nginx-module-vts). This module
      provides access to virtual host status information containing the current
      status of servers, upstreams and caches, similar to the live activity
      monitoring of Nginx plus. For module configuration details please see the
      [module
      documentation](https://github.com/vozlt/nginx-module-vts#synopsis).
    introduced: v1.9.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Hashicorp Nomad
    id: nomad
    description: |
      This plugin collects metrics from every [Nomad
      agent](https://www.nomadproject.io/) of the specified cluster. Telegraf
      may be present in every node and connect to the agent locally.
    introduced: v1.22.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: NLnet Labs Name Server Daemon
    id: nsd
    description: |
      This plugin gathers statistics from a [NLnet Labs Name Server
      Daemon](https://www.nlnetlabs.nl/projects/nsd/about), an authoritative
      DNS name server.
    introduced: v1.0.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Netgear Switch Discovery Protocol
    id: nsdp
    description: |
      This plugin gathers metrics from devices via the [Netgear Switch
      Discovery
      Protocol](https://en.wikipedia.org/wiki/Netgear_Switch_Discovery_Protocol)
      for all available switches and ports.
    introduced: v1.34.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: NSQ
    id: nsq
    description: |
      This plugin gathers metrics from [NSQ](https://nsq.io/) realtime
      distributed messaging platform instances using the [NSQD
      API](https://nsq.io/components/nsqd.html).
    introduced: v1.16.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: NSQ Consumer
    id: nsq_consumer
    description: |
      This service plugin consumes messages from [NSQ](https://nsq.io/)
      realtime distributed messaging platform brokers in one of the supported
      [data formats](/telegraf/v1/data_formats/input).
    introduced: v0.10.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Kernel Network Statistics
    id: nstat
    description: |
      This plugin collects network metrics from `/proc/net/netstat`,
      `/proc/net/snmp` and `/proc/net/snmp6` files
    introduced: v0.13.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, system]
  - name: Network Time Protocol Query
    id: ntpq
    description: |
      This plugin gathers metrics about [Network Time
      Protocol](https://ntp.org/) queries.

      > [!IMPORTANT]
      > This plugin requires the `ntpq` executable to be installed on the
      > system.
    introduced: v0.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Nvidia System Management Interface (SMI)
    id: nvidia_smi
    description: |
      This plugin collects metrics for [NVIDIA GPUs](https://www.nvidia.com/)
      including memory and GPU usage, temperature and other, using the [NVIDIA
      System Management
      Interface](https://developer.nvidia.com/nvidia-system-management-interface).

      > [!IMPORTANT]
      > This plugin requires the `nvidia-smi` binary to be installed on the
      > system.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, system]
  - name: OPC UA Client Reader
    id: opcua
    description: |
      This plugin gathers data from an [OPC
      UA](https://opcfoundation.org/about/opc-technologies/opc-ua/) server by
      subscribing to the configured nodes.
    introduced: v1.16.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: OPC UA Client Listener
    id: opcua_listener
    description: |
      This service plugin receives data from an [OPC
      UA](https://opcfoundation.org/about/opc-technologies/opc-ua/) server by
      subscribing to nodes and events.
    introduced: v1.25.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [iot]
  - name: OpenLDAP
    id: openldap
    description: |
      This plugin gathers metrics from [OpenLDAP](https://www.openldap.org/)'s
      `cn=Monitor` backend. To use this plugin you must enable the [slapd
      monitoring](https://www.openldap.org/devel/admin/monitoringslapd.html)
      backend.

      > [!NOTE]
      > It is recommended to use the newer [`ldap` input plugin]() instead.
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, server]
  - name: OpenNTPD
    id: openntpd
    description: |
      This plugin gathers metrics from [OpenNTPD](http://www.openntpd.org/)
      using the `ntpctl` command.

      > [!NOTE]
      > The `ntpctl` binary must be present on the system and executable by
      > Telegraf. The plugin supports using `sudo` for execution.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, server]
  - name: OpenSearch Query
    id: opensearch_query
    description: |
      This plugin queries [OpenSearch](https://opensearch.org/) endpoints to
      derive metrics from data stored in an OpenSearch cluster like the number
      of hits for a search query, statistics on numeric fields, document
      counts, etc.

      > [!NOTE]
      > This plugins is tested against OpenSearch 2.5.0 and 1.3.7 but newer
      > version should also work.
    introduced: v1.26.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: OpenSMTPD
    id: opensmtpd
    description: |
      This plugin gathers statistics from
      [OpenSMTPD](https://www.opensmtpd.org/) using the `smtpctl` binary.

      > [!NOTE]
      > The `smtpctl` binary must be present on the system and executable by
      > Telegraf. The plugin supports using `sudo` for execution.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, server]
  - name: OpenStack
    id: openstack
    description: |
      This plugin collects metrics about services from
      [OpenStack](https://www.openstack.org/) endpoints.

      > [!CAUTION]
      > Due to the large number of unique tags generated by the plugin it is
      > **highly recommended** to use [metric
      > filtering](/telegraf/v1/configuration/#modifiers) like `taginclude` and
      > `tagexclude` to reduce cardinality.
    introduced: v1.21.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, server]
  - name: OpenTelemetry
    id: opentelemetry
    description: |
      This service plugin receives traces, metrics, logs and profiles from
      [OpenTelemetry](https://opentelemetry.io) clients and compatible agents
      via gRPC.

      > [!NOTE]
      > Telegraf v1.32 through v1.35 support the Profiles signal using the v1
      > experimental API. Telegraf v1.36+ supports the Profiles signal using the
      > v1 development API.
    introduced: v1.19.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [logging, messaging]
  - name: OpenWeatherMap
    id: openweathermap
    description: |
      This plugin collects weather and forecast data from the
      [OpenWeatherMap](https://openweathermap.org) service.

      > [!IMPORTANT]
      > To use this plugin you will need an
      > [APP-ID](https://openweathermap.org/appid) to work.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, web]
  - name: P4 Runtime
    id: p4runtime
    description: |
      This plugin collects metrics from the data plane of network devices, such
      as Programmable Switches or Programmable Network Interface Cards by
      reading the `Counter` values of the [P4 program](https://p4.org) running
      on the device. Metrics are collected through a gRPC connection with the
      [P4 runtime](https://github.com/p4lang/p4runtime) server.

      > [!TIP]
      > If you want to gather information about the program name, please follow
      > the instruction in [6.2.1. Annotating P4 code with
      > PkgInfo](https://p4.org/p4-spec/p4runtime/main/P4Runtime-Spec.html#sec-annotating-p4-code-with-pkginfo)
      > to modify your P4 program.
    introduced: v1.26.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, network]
  - name: Passenger
    id: passenger
    description: |
      This plugin gathers metrics from the [Phusion
      Passenger](https://www.phusionpassenger.com/) service.

      > [!WARNING]
      > Depending on your environment, this plugin can create a high number of
      > series which can cause high load on your database. Please use
      > [measurement
      > filtering](https://docs.influxdata.com/telegraf/latest/administration/configuration/#measurement-filtering)
      > to manage your series cardinality!

      The plugin uses the `passenger-status` command line tool.

      > [!NOTE]
      > This plugin requires the `passenger-status` binary to be installed on
      > the system and to be executable by Telegraf.
    introduced: v0.10.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [web]
  - name: PF
    id: pf
    description: |
      This plugin gathers information from the FreeBSD or OpenBSD pf firewall
      like the number of current entries in the table, counters for the number
      of searches, inserts, and removals to tables using the `pfctl` command.

      > [!NOTE]
      > This plugin requires the `pfctl` binary to be executable by Telegraf. It
      > requires read access to the device file `/dev/pf`.
    introduced: v1.5.0
    os_support: [freebsd]
    tags: [network, system]
  - name: PgBouncer
    id: pgbouncer
    description: |
      This plugin collects metrics from a [PgBouncer load
      balancer](https://pgbouncer.github.io) instance. Check the
      [documentation](https://pgbouncer.github.io/usage.html) for available
      metrics and their meaning.

      > [!NOTE]
      > This plugin requires PgBouncer v1.5+.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: PHP-FPM
    id: phpfpm
    description: |
      This plugin gathers statistics of the [PHP FastCGI Process
      Manager](https://www.php.net/manual/en/install.fpm.php) using either the
      HTTP status page or the fpm socket.
    introduced: v0.1.10
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Ping
    id: ping
    description: |
      This plugin collects metrics on ICMP ping packets including the
      round-trip time, response times and other packet statistics.

      > [!NOTE]
      > When using the `exec` method the `ping` command must be available on the
      > systems and executable by Telegraf.
    introduced: v0.1.8
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Postfix
    id: postfix
    description: |
      This plugin collects metrics on a local
      [Postfix](https://www.postfix.org/) instance reporting the length, size
      and age of the active, hold, incoming, maildrop, and deferred
      [queues](https://www.postfix.org/QSHAPE_README.html#queues).
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris]
    tags: [server]
  - name: PostgreSQL
    id: postgresql
    description: |
      This plugin provides metrics for a
      [PostgreSQL](https://www.postgresql.org/) Server instance. Recorded
      metrics are lightweight and use Dynamic Management Views supplied by
      PostgreSQL.
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: PostgreSQL Extensible
    id: postgresql_extensible
    description: |
      This plugin queries a [PostgreSQL](https://www.postgresql.org/) server
      and provides metrics for the returned result. This is useful when using
      PostgreSQL extensions to collect additional metrics.

      > [!TIP]
      > Please also check the more generic [sql input
      > plugin](/telegraf/v1/plugins/#input-sql).
    introduced: v0.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: PowerDNS
    id: powerdns
    description: |
      This plugin gathers metrics from [PowerDNS](https://www.powerdns.com/)
      servers using unix sockets.

      > [!NOTE]
      > This plugin will need access to the powerdns control socket.
    introduced: v0.10.2
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: PowerDNS Recursor
    id: powerdns_recursor
    description: |
      This plugin gathers metrics from [PowerDNS
      Recursor](https://www.powerdns.com/powerdns-recursor) instances using the
      unix control-sockets.

      > [!NOTE]
      > Telegraf will need read and write access to the control socket and the
      > `socket_dir`.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Processes
    id: processes
    description: |
      This plugin gathers info about the total number of processes and groups
      them by status (zombie, sleeping, running, etc.)

      > [!NOTE]
      > On Linux this plugin requires access to procfs (/proc), on other
      > operating systems the plugin must be able to execute the `ps` command.
    introduced: v0.11.0
    os_support: [freebsd, linux, macos]
    tags: [system]
  - name: Procstat
    id: procstat
    description: |
      This plugin allows to monitor the system resource usage of one or more
      processes. The plugin provides metrics about the individual processes as
      well as accumulated metrics on the number of PIDs returned on a search.
      Processes can be filtered e.g. by regular expressions on the command, the
      user owning the process or the service that started the process.
    introduced: v0.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Prometheus
    id: prometheus
    description: |
      This plugin gathers metrics from [Prometheus](https://prometheus.io/)
      metric endpoints such as applications implementing such an endpoint or
      node-exporter instances. This plugin also supports various
      service-discovery methods.
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, server]
  - name: Proxmox
    id: proxmox
    description: |
      This plugin gathers metrics about containers and VMs running on a
      [Proxmox](https://www.proxmox.com) instance using the Proxmox API.
    introduced: v1.16.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Puppet Agent
    id: puppetagent
    description: |
      This plugin gathers metrics of a [Puppet agent](https://www.puppet.com/)
      by parsing variables from the local last-run-summary file.
    introduced: v0.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: RabbitMQ
    id: rabbitmq
    description: |
      This plugin gathers statistics from [RabbitMQ](https://www.rabbitmq.com)
      servers via the [Management
      Plugin](https://www.rabbitmq.com/management.html).
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Radius
    id: radius
    description: |
      This plugin collects response times for
      [Radius](https://datatracker.ietf.org/doc/html/rfc2865) authentication
      requests.
    introduced: v1.26.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Raindrops Middleware
    id: raindrops
    description: |
      This plugin collects statistics for [Raindrops
      middleware](http://raindrops.bogomips.org/Raindrops/Middleware.html)
      instances.
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: RAS Daemon
    id: ras
    description: |
      This plugin gathers statistics and error counts provided by the local
      [RAS (reliability, availability and
      serviceability)](https://github.com/mchehab/rasdaemon) daemon.

      > [!NOTE]
      > This plugin requires access to SQLite3 database from `RASDaemon`. Please
      > make sure the Telegraf user has the required permissions to this
      > database!
    introduced: v1.16.0
    os_support: [linux]
    tags: [server]
  - name: RavenDB
    id: ravendb
    description: |
      This plugin gathers metrics from [RavenDB](https://ravendb.net/) servers
      via the monitoring API.

      > [!NOTE]
      > This plugin requires RavenDB Server v5.2+.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Redfish
    id: redfish
    description: |
      This plugin gathers metrics and status information of server hardware
      with enabled [DMTF's Redfish](https://redfish.dmtf.org/) support.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Redis
    id: redis
    description: |
      This plugin gathers metrics from [Redis](https://redis.io/) servers.
    introduced: v0.1.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Redis Sentinel
    id: redis_sentinel
    description: |
      This plugin collects metrics for [Redis
      Sentinel](https://redis.io/docs/latest/operate/oss_and_stack/management/sentinel/)
      instances monitoring Redis servers and replicas.
    introduced: v1.22.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: RethinkDB
    id: rethinkdb
    description: |
      This plugin collects metrics from [RethinkDB](https://www.rethinkdb.com/)
      servers.
    introduced: v0.1.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Riak
    id: riak
    description: |
      This plugin gathers metrics from [Riak](https://riak.com/) instances.
    introduced: v0.10.4
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Riemann Listener
    id: riemann_listener
    description: |
      This service plugin listens for messages from
      [Riemann](https://riemann.io/) clients using the protocol buffer format.
    introduced: v1.17.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Siemens S7
    id: s7comm
    description: |
      This plugin reads metrics from Siemens PLCs via the S7 protocol.
    introduced: v1.28.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware]
  - name: Salesforce
    id: salesforce
    description: |
      This plugin gathers metrics about the limits in your
      [Salesforce](https://salesforce.com) organization and the remaining usage
      using the [limits
      endpoint](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_limits.htm)
      of Salesforce's REST API.
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, server]
  - name: LM Sensors
    id: sensors
    description: |
      This plugin collects metrics from hardware sensors using
      [lm-sensors](https://en.wikipedia.org/wiki/Lm_sensors).

      > [!NOTE]
      > This plugin requires the lm-sensors package to be installed on the
      > system and `sensors` to be executable from Telegraf.
    introduced: v0.10.1
    os_support: [linux]
    tags: [hardware, system]
  - name: SFlow
    id: sflow
    description: |
      This service plugin produces metrics from information received by acting
      as a [SFlow V5](https://sflow.org/sflow_version_5.txt) collector.
      Currently, the plugin can collect Flow Samples of Ethernet / IPv4, IPv4
      TCP and UDP headers. Counters and other header samples are ignored.
      Please use the [netflow plugin](/telegraf/v1/plugins/#input-netflow) for
      a more modern and sophisticated implementation.

      > [!CRITICAL]
      > This plugin produces high cardinality data, which when not controlled
      > for will cause high load on your database. Please make sure to
      > [filter](/telegraf/v1/configuration/#metric-filtering) the produced
      > metrics or configure your database to avoid cardinality issues!
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Slab
    id: slab
    description: |
      This plugin collects details on memory consumption of [Slab
      cache](https://www.kernel.org/doc/gorman/html/understand/understand011.html)
      entries by parsing the `/proc/slabinfo` file respecting the `HOST_PROC`
      environment variable.

      > [!NOTE]
      > This plugin requires `/proc/slabinfo` to be readable by the Telegraf
      > user.
    introduced: v1.23.0
    os_support: [linux]
    tags: [system]
  - name: SLURM
    id: slurm
    description: |
      This plugin gather diagnoses, jobs, nodes, partitions and reservation
      metrics for a [SLURM](https://slurm.schedmd.com) instance using the REST
      API provided by the `slurmrestd` daemon.

      > [!NOTE]
      > This plugin supports the [REST API
      > v0.0.38](https://slurm.schedmd.com/rest.html) which must be enabled in
      > the `slurmrestd` daemon. For more information, check the
      > [documentation](https://slurm.schedmd.com/rest_quickstart.html#customization).
    introduced: v1.32.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: S.M.A.R.T.
    id: smart
    description: |
      This plugin collects [Self-Monitoring, Analysis and Reporting
      Technology](https://en.wikipedia.org/wiki/Self-Monitoring,_Analysis_and_Reporting_Technology)
      information for storage devices information using the [`smartmontools`]()
      package. This plugin also supports NVMe devices by using the
      [`nvme-cli`]() package.

      > [!NOTE]
      > This plugin requires the [`smartmontools`]() and, for NVMe devices, the
      > [`nvme-cli`]() packages to be installed on your system. The `smartctl`
      > and `nvme` commands must to be executable by Telegraf.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, system]
  - name: smartctl JSON
    id: smartctl
    description: |
      This plugin collects [Self-Monitoring, Analysis and Reporting
      Technology](https://en.wikipedia.org/wiki/Self-Monitoring,_Analysis_and_Reporting_Technology)
      information for storage devices information using the [`smartmontools`]()
      package. Contrary to the [smart
      plugin](/telegraf/v1/plugins/#input-smart), this plugin does not use the
      [`nvme-cli`]() package to collect additional information about NVMe
      devices.

      > [!NOTE]
      > This plugin requires [`smartmontools`]() to be installed on your system.
      > The `smartctl` command must to be executable by Telegraf and must
      > supporting JSON output. JSON output was added in v7.0 and improved in
      > subsequent releases
    introduced: v1.31.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, system]
  - name: SNMP
    id: snmp
    description: |
      This plugin gathers metrics by polling
      [SNMP](https://datatracker.ietf.org/doc/html/rfc1157) agents with
      individual OIDs or complete SNMP tables.

      > [!NOTE]
      > The path setting is shared between all instances of all SNMP plugin
      > types!
    introduced: v0.10.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, network]
  - name: SNMP Trap
    id: snmp_trap
    description: |
      This service plugin listens for
      [SNMP](https://datatracker.ietf.org/doc/html/rfc1157) notifications like
      traps and inform requests. Notifications are received on plain UDP with a
      configurable port.

      > [!NOTE]
      > The path setting is shared between all instances of all SNMP plugin
      > types!
    introduced: v1.13.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, network]
  - name: Socket Listener
    id: socket_listener
    description: |
      This service plugin listens for messages on sockets (TCP, UDP, Unix or
      Unixgram) and parses the packets received in one of the supported [data
      formats](/telegraf/v1/data_formats/input).
    introduced: v1.3.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Socket Statistics
    id: socketstat
    description: |
      This plugin gathers metrics for established network connections using
      [iproute2](https://github.com/iproute2/iproute2)'s `ss` command. The `ss`
      command does not require specific privileges.

      > [!CRITICAL]
      > This plugin produces high cardinality data, which when not controlled
      > for will cause high load on your database. Please make sure to
      > [filter](/telegraf/v1/configuration/#metric-filtering) the produced
      > metrics or configure your database to avoid cardinality issues!
    introduced: v1.22.0
    os_support: [freebsd, linux, macos]
    tags: [network]
  - name: Apache Solr
    id: solr
    description: |
      This plugin collects statistics from
      [Solr](http://lucene.apache.org/solr/) instances using the [MBean Request
      Handler](https://cwiki.apache.org/confluence/display/solr/MBean+Request+Handler).
      For additional details on performance statistics check the [performance
      statistics
      reference](https://cwiki.apache.org/confluence/display/solr/Performance+Statistics+Reference).

      > [!NOTE]
      > This plugin requires Apache Solr v3.5+.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: SQL
    id: sql
    description: |
      This plugin reads metrics from performing
      [SQL](https://www.iso.org/standard/76583.html) queries against a SQL
      server. Different server types are supported and their settings might
      differ (especially the connection parameters). Please check the list of
      [supported SQL drivers](../../../docs/SQL_DRIVERS_INPUT.md) for the
      `driver` name and options for the data-source-name (`dsn`) options.
    introduced: v1.19.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Microsoft SQL Server
    id: sqlserver
    description: |
      This plugin provides metrics for your [SQL
      Server](https://docs.microsoft.com/en-us/sql/sql-server) instance.
      Recorded metrics are lightweight and use Dynamic Management Views
      supplied by SQL Server.

      > [!NOTE]
      > This plugin supports SQL server versions supported by Microsoft (see
      > [lifecycle
      > dates](https://docs.microsoft.com/en-us/sql/sql-server/end-of-support/sql-server-end-of-life-overview?view=sql-server-ver15#lifecycle-dates)),
      > Azure SQL Databases (Single), Azure SQL Managed Instances, Azure SQL
      > Elastic Pools and Azure Arc-enabled SQL Managed Instances.
    introduced: v0.10.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Stackdriver Google Cloud Monitoring
    id: stackdriver
    description: |
      This plugin collects metrics from [Google Cloud
      Monitoring](https://cloud.google.com/monitoring) (formerly Stackdriver)
      using the [Cloud Monitoring API
      v3](https://cloud.google.com/monitoring/api/v3/).

      > [!IMPORTANT]
      > This plugin accesses APIs which are
      > [chargeable](https://cloud.google.com/stackdriver/pricing#stackdriver_monitoring_services),
      > cost might incur.
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: StatsD
    id: statsd
    description: |
      This service plugin gathers metrics from a
      [Statsd](https://github.com/statsd/statsd) server.
    introduced: v0.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: Supervisor
    id: supervisor
    description: |
      This plugin gathers information about processes running under
      [supervisord](https://supervisord.org/) using the [XML-RPC
      API](https://supervisord.org/api.html).

      > [!NOTE]
      > This plugin requires supervisor v3.3.2+.
    introduced: v1.24.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: Suricata
    id: suricata
    description: |
      This service plugin reports internal performance counters of the
      [Suricata IDS/IPS](https://suricata.io/) engine, such as captured traffic
      volume, memory usage, uptime, flow counters, and much more. This plugin
      provides a socket for the Suricata log output to write JSON stats output
      to, and processes the incoming data to fit Telegraf's format. It can also
      report for triggered Suricata IDS/IPS alerts.
    introduced: v1.13.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, network]
  - name: Swap
    id: swap
    description: |
      This plugin collects metrics on the operating-system's swap memory.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Synproxy
    id: synproxy
    description: |
      This plugin gathers metrics about the Linux netfilter's
      [synproxy](https://wiki.nftables.org/wiki-nftables/index.php/Synproxy)
      module used for mitigating SYN attacks.
    introduced: v1.13.0
    os_support: [linux]
    tags: [network]
  - name: Syslog
    id: syslog
    description: |
      This service plugin listens for
      [syslog](https://en.wikipedia.org/wiki/Syslog) messages transmitted over
      a Unix Domain socket, [UDP](https://tools.ietf.org/html/rfc5426),
      [TCP](https://tools.ietf.org/html/rfc6587) or
      [TLS](https://tools.ietf.org/html/rfc5425) with or without the octet
      counting framing.

      Syslog messages should be formatted according to the [syslog
      protocol](https://tools.ietf.org/html/rfc5424) or the [BSD syslog
      protocol](https://tools.ietf.org/html/rfc3164).
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [logging]
  - name: System Performance Statistics
    id: sysstat
    description: |
      This plugin collects Linux [system performance
      statistics](https://github.com/sysstat/sysstat) using the `sysstat`
      package. This plugin uses the `sadc` collector utility and and parses the
      created binary data file using the `sadf` utility.

      > [!NOTE]
      > This plugin requires the `sysstat` package to be installed on the system
      > and both `sadc` and `sadf` to be executable by Telegraf.
    introduced: v0.12.1
    os_support: [linux]
    tags: [system]
  - name: System
    id: system
    description: |
      This plugin gathers general system statistics like system load, uptime or
      the number of users logged in. It is similar to the unix `uptime`
      command.
    introduced: v0.1.6
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Systemd-Units
    id: systemd_units
    description: |
      This plugin gathers the status of systemd-units on Linux, using systemd's
      DBus interface.

      > [!NOTE]
      > This plugin requires systemd v230+!
    introduced: v1.13.0
    os_support: [linux]
    tags: [system]
  - name: Tacacs
    id: tacacs
    description: |
      This plugin collects metrics on [Terminal Access Controller Access
      Control System](https://datatracker.ietf.org/doc/html/rfc1492)
      authentication requests like response status and response time from
      servers such as [Aruba
      ClearPass](https://www.hpe.com/de/de/aruba-clearpass-policy-manager.html),
      [FreeRADIUS](https://www.freeradius.org/) or
      [TACACS+](https://datatracker.ietf.org/doc/html/rfc8907).

      The plugin is primarily meant to monitor how long it takes for the server
      to fully handle an authentication request, including all potential
      dependent calls (for example to AD servers, or other sources of truth).
    introduced: v1.28.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Tail
    id: tail
    description: |
      This service plugin continuously reads a file and parses new data as it
      arrives similar to the [tail -f
      command](https://man7.org/linux/man-pages/man1/tail.1.html). The incoming
      messages are expected to be in one of the supported [data
      formats](/telegraf/v1/data_formats/input).
    introduced: v1.1.2
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [logging]
  - name: Teamspeak
    id: teamspeak
    description: |
      This plugin collects statistics of one or more virtual
      [Teamspeak](https://www.teamspeak.com) servers using the `ServerQuery`
      interface. Currently this plugin only supports Teamspeak 3 servers.

      > [!NOTE]
      > For querying external Teamspeak server, make sure to add the Telegraf
      > host to the `query_ip_allowlist.txt` file in the Teamspeak Server
      > directory.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Temperature
    id: temp
    description: |
      This plugin gathers metrics on system temperatures.
    introduced: v1.8.0
    os_support: [linux, macos, windows]
    tags: [hardware, system]
  - name: Tengine Web Server
    id: tengine
    description: |
      This plugin gathers metrics from the [Tengine Web
      Server](http://tengine.taobao.org) via the
      [reqstat](http://tengine.taobao.org/document/http_reqstat.html) module.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Apache Tomcat
    id: tomcat
    description: |
      This plugin collects statistics from a [Tomcat
      server](https://tomcat.apache.org) instance using the manager status
      page. See the [Tomcat
      documentation](https://tomcat.apache.org/tomcat-9.0-doc/manager-howto.html#Server_Status)
      for details of these statistics.
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server, web]
  - name: Trig
    id: trig
    description: |
      This plugin is for demonstration purposes and inserts sine and cosine
      values as metrics.
    introduced: v0.3.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [testing]
  - name: Turbostat
    id: turbostat
    description: |
      This service plugin monitors system performance using the
      [turbostat](https://github.com/torvalds/linux/tree/master/tools/power/x86/turbostat)
      command.

      > [!IMPORTANT]
      > This plugin requires the `turbostat` executable to be installed on the
      > system.
    introduced: v1.36.0
    os_support: [linux]
    tags: [hardware, system]
  - name: Twemproxy
    id: twemproxy
    description: |
      This plugin gathers statistics from
      [Twemproxy](https://github.com/twitter/twemproxy) servers.
    introduced: v0.3.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: Unbound
    id: unbound
    description: |
      This plugin gathers stats from an [Unbound](https://www.unbound.net) DNS
      resolver.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, server]
  - name: UPSD
    id: upsd
    description: |
      This plugin reads data of one or more Uninterruptible Power Supplies from
      a [Network UPS Tools](https://networkupstools.org/) daemon using its NUT
      network protocol.
    introduced: v1.24.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [hardware, server]
  - name: uWSGI
    id: uwsgi
    description: |
      This plugin gathers metrics about
      [uWSGI](https://uwsgi-docs.readthedocs.io/en/latest/) using its [Stats
      Server](https://uwsgi-docs.readthedocs.io/en/latest/StatsServer.html).
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Varnish
    id: varnish
    description: |
      This plugin gathers statistics from a local [Varnish HTTP
      Cache](https://varnish-cache.org) instance using the `varnishstat`
      command.

      > [!NOTE]
      > This plugin requires the `varnishstat` executable to be installed on the
      > system and executable by Telegraf. Furthermore, the plugin requires
      > Varnish v6.0.2+.
    introduced: v0.13.1
    os_support: [freebsd, linux, macos]
    tags: [server, web]
  - name: Hashicorp Vault
    id: vault
    description: |
      This plugin collects metrics from every
      [Vault](https://www.hashicorp.com/de/products/vault) agent of a cluster.

      > [!NOTE]
      > This plugin requires Vault v1.8.5+
    introduced: v1.22.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [server]
  - name: VMware vSphere
    id: vsphere
    description: |
      This plugin gathers metrics from
      [vSphere](https://www.vmware.com/products/cloud-infrastructure/vsphere)
      servers of a vCenter including clusters, hosts, resource pools, VMs,
      datastores and vSAN information.

      > [!NOTE]
      > This plugin requires vSphere v7.0+.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [containers]
  - name: Webhooks
    id: webhooks
    description: |
      This service plugin provides an HTTP server and register for multiple
      webhook listeners.
    introduced: v1.0.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, web]
  - name: WHOIS
    id: whois
    description: |
      This plugin queries [WHOIS
      information](https://datatracker.ietf.org/doc/html/rfc3912) for
      configured domains and provides metrics such as expiration timestamps,
      registrar details and domain status from e.g.
      [IANA](https://www.iana.org/whois) or [ICANN](https://lookup.icann.org/)
      servers.
    introduced: v1.35.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network, web]
  - name: Windows Eventlog
    id: win_eventlog
    description: |
      This plugin gathers metrics from the [Windows event
      log](https://learn.microsoft.com/en-us/shows/inside/event-viewer) on
      Windows Vista and higher.

      > [!NOTE]
      > Some event channels, like the System Log, require Administrator
      > permissions to subscribe.
    introduced: v1.16.0
    os_support: [windows]
    tags: [logging]
  - name: Windows Performance Counters
    id: win_perf_counters
    description: |
      This plugin produces metrics from the collected [Windows Performance
      Counters](https://learn.microsoft.com/en-us/windows/win32/perfctrs/about-performance-counters).
    introduced: v0.10.2
    os_support: [windows]
    tags: [system]
  - name: Windows Services
    id: win_services
    description: |
      This plugin collects information about the status of Windows services.

      > [!NOTE]
      > Monitoring some services may require running Telegraf with administrator
      > privileges.
    introduced: v1.4.0
    os_support: [windows]
    tags: [system]
  - name: Windows Management Instrumentation
    id: win_wmi
    description: |
      This plugin queries information or invokes methods using [Windows
      Management
      Instrumentation](https://learn.microsoft.com/en-us/windows/win32/wmisdk/wmi-start-page)
      classes. This allows capturing and filtering virtually any configuration
      or metric value exposed through WMI.

      > [!NOTE]
      > The telegraf service user must have at least permission to
      > [read](https://learn.microsoft.com/en-us/windows/win32/wmisdk/access-to-wmi-namespaces)
      > the WMI namespace being queried.
    introduced: v1.26.0
    os_support: [windows]
    tags: [system]
  - name: Wireguard
    id: wireguard
    description: |
      This plugin collects statistics on a local
      [Wireguard](https://www.wireguard.com/) server using the [`wgctrl`
      library](). The plugin reports gauge metrics for Wireguard interface
      device(s) and its peers.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Wireless
    id: wireless
    description: |
      This plugin gathers metrics about wireless link quality by reading the
      `/proc/net/wireless` file.
    introduced: v1.9.0
    os_support: [linux]
    tags: [network]
  - name: x509 Certificate
    id: x509_cert
    description: |
      This plugin provides information about
      [X.509](https://en.wikipedia.org/wiki/X.509) certificates accessible e.g.
      via local file, tcp, udp, https or smtp protocols and the Windows
      Certificate Store.

      > [!NOTE]
      > When using a UDP address as a certificate source, the server must
      > support
      > [DTLS](https://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security).
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: Dell EMC XtremIO
    id: xtremio
    description: |
      This plugin gathers metrics from a [Dell EMC XtremIO Storage
      Array](https://www.delltechnologies.com/asset/en-sa/products/storage/industry-market/h16444-introduction-xtremio-x2-storage-array-wp.pdf)
      instance using the [v3 Rest
      API](https://dl.dell.com/content/docu96624_xtremio-storage-array-x1-and-x2-cluster-types-with-xms-6-3-0-to-6-3-3-and-xios-4-0-15-to-4-0-31-and-6-0-0-to-6-3-3-restful-api-3-x-guide.pdf).
    introduced: v1.22.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [network]
  - name: ZFS
    id: zfs
    description: |
      This plugin gathers metrics from [ZFS](https://en.wikipedia.org/wiki/ZFS)
      filesystems using `/proc/spl/kstat/zfs` on Linux and `sysctl`, `zfs` and
      `zpool` on FreeBSD.
    introduced: v0.2.1
    os_support: [freebsd, linux]
    tags: [system]
  - name: Zipkin
    id: zipkin
    description: |
      This service plugin implements the [Zipkin](https://zipkin.io/) HTTP
      server to gather trace and timing data needed to troubleshoot latency
      problems in microservice architectures.

      > [!CRITICAL]
      > This plugin produces high cardinality data, which when not controlled
      > for will cause high load on your database. Please make sure to
      > [filter](/telegraf/v1/configuration/#metric-filtering) the produced
      > metrics or configure your database to avoid cardinality issues!
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Apache Zookeeper
    id: zookeeper
    description: |
      This plugin collects variables from
      [Zookeeper](https://zookeeper.apache.org) instances using the [`mntr`
      command]().

      > [!NOTE]
      > If the Prometheus Metric provider is enabled in Zookeeper use the
      > [prometheus plugin](/telegraf/v1/plugins/#input-prometheus) instead with
      > `http://<ip>:7000/metrics`.
    introduced: v0.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
output:
  - name: Amon
    id: amon
    description: |
      This plugin writes metrics to [Amon monitoring
      platform](https://www.amon.cx). It requires a `serverkey` and
      `amoninstance` URL which can be obtained
      [here](https://www.amon.cx/docs/monitoring/) for your account.

      > [!IMPORTANT]
      > If point values being sent cannot be converted to a `float64`, the
      > metric is skipped.
    introduced: v0.2.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: AMQP
    id: amqp
    description: |
      This plugin writes to an Advanced Message Queuing Protocol v0.9.1 broker.
      A prominent implementation of this protocol is
      [RabbitMQ](https://www.rabbitmq.com).

      > [!NOTE]
      > This plugin does not bind the AMQP exchange to a queue.

      For an introduction check the [AMQP concepts
      page](https://www.rabbitmq.com/tutorials/amqp-concepts.html) and the
      [RabbitMQ getting started
      guide](https://www.rabbitmq.com/getstarted.html).
    introduced: v0.1.9
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Azure Application Insights
    id: application_insights
    description: |
      This plugin writes metrics to the [Azure Application
      Insights](https://azure.microsoft.com/en-us/services/application-insights/)
      service.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, cloud]
  - name: Azure Data Explorer
    id: azure_data_explorer
    description: |
      This plugin writes metrics to the [Azure Data
      Explorer](https://docs.microsoft.com/en-us/azure/data-explorer), [Azure
      Synapse Data
      Explorer](https://docs.microsoft.com/en-us/azure/synapse-analytics/data-explorer/data-explorer-overview),
      and [Real time analytics in
      Fabric](https://learn.microsoft.com/en-us/fabric/real-time-analytics/overview)
      services.

      Azure Data Explorer is a distributed, columnar store, purpose built for
      any type of logs, metrics and time series data.
    introduced: v1.20.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Azure Monitor
    id: azure_monitor
    description: |
      This plugin writes metrics to [Azure
      Monitor](https://learn.microsoft.com/en-us/azure/azure-monitor) which has
      a metric resolution of one minute. To accomodate for this in Telegraf,
      the plugin will automatically aggregate metrics into one minute buckets
      and send them to the service on every flush interval.

      > [!IMPORTANT]
      > The Azure Monitor custom metrics service is currently in preview and
      > might not be available in all Azure regions. Please also take the metric
      > time limitations into account!

      The metrics from each input plugin will be written to a separate Azure
      Monitor namespace, prefixed with `Telegraf/` by default. The field name
      for each metric is written as the Azure Monitor metric name. All field
      values are written as a summarized set that includes: min, max, sum,
      count. Tags are written as a dimension on each Azure Monitor metric.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Google BigQuery
    id: bigquery
    description: |
      This plugin writes metrics to the [Google Cloud
      BigQuery](https://cloud.google.com/bigquery) service and requires
      [authentication](https://cloud.google.com/bigquery/docs/authentication)
      with Google Cloud using either a service account or user credentials.

      > [!IMPORTANT]
      > Be aware that this plugin accesses APIs that are
      > [chargeable](https://cloud.google.com/bigquery/pricing) and might incur
      > costs.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Clarify
    id: clarify
    description: |
      This plugin writes metrics to [Clarify](https://clarify.io). To use this
      plugin you will need to obtain a set of
      [credentials](https://docs.clarify.io/users/admin/integrations/credentials).
    introduced: v1.27.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Google Cloud PubSub
    id: cloud_pubsub
    description: |
      This plugin publishes metrics to a [Google Cloud
      PubSub](https://cloud.google.com/pubsub) topic in one of the supported
      [data formats](/telegraf/v1/data_formats/output).
    introduced: v1.10.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, messaging]
  - name: Amazon CloudWatch
    id: cloudwatch
    description: |
      This plugin writes metrics to the [Amazon
      CloudWatch](https://aws.amazon.com/cloudwatch) service.
    introduced: v0.10.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Amazon CloudWatch Logs
    id: cloudwatch_logs
    description: |
      This plugin writes log-metrics to the [Amazon
      CloudWatch](https://aws.amazon.com/cloudwatch) service.
    introduced: v1.19.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, logging]
  - name: CrateDB
    id: cratedb
    description: |
      This plugin writes metrics to [CrateDB](https://crate.io/) via its
      [PostgreSQL
      protocol](https://crate.io/docs/crate/reference/protocols/postgres.html).
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Datadog
    id: datadog
    description: |
      This plugin writes metrics to the [Datadog Metrics
      API](https://docs.datadoghq.com/api/v1/metrics/#submit-metrics) and
      requires an `apikey` which can be obtained
      [here](https://app.datadoghq.com/account/settings#api) for the account. >
      [!NOTE] This plugin supports the v1 API.
    introduced: v0.1.6
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, cloud, datastore]
  - name: Discard
    id: discard
    description: |
      This plugin discards all metrics written to it and is meant for testing
      purposes.
    introduced: v1.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [testing]
  - name: Dynatrace
    id: dynatrace
    description: |
      This plugin writes metrics to [Dynatrace](https://www.dynatrace.com) via
      the [Dynatrace Metrics API
      V2](https://docs.dynatrace.com/docs/shortlink/api-metrics-v2). It may be
      run alongside the Dynatrace OneAgent for automatic authentication or it
      may be run standalone on a host without OneAgent by specifying a URL and
      API Token.

      More information on the plugin can be found in the [Dynatrace
      documentation](https://docs.dynatrace.com/docs/shortlink/api-metrics-v2-post-datapoints).

      > [!NOTE]
      > All metrics are reported as gauges, unless they are specified to be
      > delta counters using the `additional_counters` or
      > `additional_counters_patterns` config option (see below). See the
      > [Dynatrace Metrics ingestion protocol
      > documentation](https://docs.dynatrace.com/docs/shortlink/metric-ingestion-protocol)
      > for details on the types defined there.
    introduced: v1.16.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Elasticsearch
    id: elasticsearch
    description: |
      This plugin writes metrics to [Elasticsearch](https://www.elastic.co) via
      HTTP using the [Elastic client
      library](http://olivere.github.io/elastic/). The plugin supports
      Elasticsearch releases from v5.x up to v7.x.
    introduced: v0.1.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore, logging]
  - name: Azure Event Hubs
    id: event_hubs
    description: |
      This plugin writes metrics to the [Azure Event
      Hubs](https://azure.microsoft.com/en-gb/services/event-hubs/) service in
      any of the supported [data formats](/telegraf/v1/data_formats/output).
      Metrics are sent as batches with each message payload containing one
      metric object, preferably as JSON as this eases integration with
      downstream components.

      Each patch is sent to a single Event Hub within a namespace. In case no
      partition key is specified the batches will be automatically
      load-balanced (round-robin) across all the Event Hub partitions.
    introduced: v1.21.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Executable
    id: exec
    description: |
      This plugin writes metrics to an external application via `stdin`. The
      command will be executed on each write creating a new process. Metrics
      are passed in one of the supported [data
      formats](/telegraf/v1/data_formats/output).

      The executable and the individual parameters must be defined as a list.
      All outputs of the executable to `stderr` will be logged in the Telegraf
      log.

      > [!TIP]
      > For better performance consider execd which runs continuously.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Executable Daemon
    id: execd
    description: |
      This plugin writes metrics to an external daemon program via `stdin`. The
      command will be executed once and metrics will be passed to it on every
      write in one of the supported [data
      formats](/telegraf/v1/data_formats/output). The executable and the
      individual parameters must be defined as a list.

      All outputs of the executable to `stderr` will be logged in the Telegraf
      log. Telegraf minimum version: Telegraf 1.15.0
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: File
    id: file
    description: |
      This plugin writes metrics to one or more local files in one of the
      supported [data formats](/telegraf/v1/data_formats/output).
    introduced: v0.10.3
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [system]
  - name: Graphite
    id: graphite
    description: |
      This plugin writes metrics to
      [Graphite](http://graphite.readthedocs.org/en/latest/index.html) via TCP.
      For details on the translation between Telegraf Metrics and Graphite
      output see the [Graphite data
      format](/telegraf/v1/plugins/#serializer-graphite).
    introduced: v0.10.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Graylog
    id: graylog
    description: |
      This plugin writes metrics to a [Graylog](https://graylog.org/) instance
      using the [GELF data
      format](https://docs.graylog.org/en/3.1/pages/gelf.html#gelf-payload-specification).
    introduced: v1.0.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore, logging]
  - name: GroundWork
    id: groundwork
    description: |
      This plugin writes metrics to a [GroundWork
      Monitor](https://www.gwos.com/product/groundwork-monitor/) instance.

      > [!IMPORTANT]
      > Plugin only supports GroundWork v8 or later.
    introduced: v1.21.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, messaging]
  - name: Health
    id: health
    description: |
      This plugin provides a HTTP health check endpoint that can be configured
      to return failure status codes based on the value of a metric.

      When the plugin is healthy it will return a 200 response; when unhealthy
      it will return a 503 response. The default state is healthy, one or more
      checks must fail in order for the resource to enter the failed state.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: HTTP
    id: http
    description: |
      This plugin writes metrics to a HTTP endpoint using one of the supported
      [data formats](/telegraf/v1/data_formats/output). For data formats
      supporting batching, metrics are sent in batches by default.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: InfluxDB v1.x
    id: influxdb
    description: |
      This plugin writes metrics to a [InfluxDB
      v1.x](https://docs.influxdata.com/influxdb/v1) instance via HTTP or UDP
      protocol.
    introduced: v0.1.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: InfluxDB v2.x
    id: influxdb_v2
    description: |
      This plugin writes metrics to a [InfluxDB
      v2.x](https://docs.influxdata.com/influxdb/v2) instance via HTTP.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Inlong
    id: inlong
    description: |
      This plugin publishes metrics to an [Apache
      InLong](https://inlong.apache.org) instance.
    introduced: v1.35.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Instrumental
    id: instrumental
    description: |
      This plugin writes metrics to the [Instrumental Collector
      API](https://instrumentalapp.com/docs/tcp-collector) and requires a
      project-specific API token.

      Instrumental accepts stats in a format very close to Graphite, with the
      only difference being that the type of stat (gauge, increment) is the
      first token, separated from the metric itself by whitespace. The
      `increment` type is only used if the metric comes in as a counter via the
      [statsd input plugin](/telegraf/v1/plugins/#input-statsd).
    introduced: v0.13.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: Apache IoTDB
    id: iotdb
    description: |
      This plugin writes metrics to an [Apache IoTDB](https://iotdb.apache.org)
      instance, a database for the Internet of Things, supporting session
      connection and data insertion.
    introduced: v1.24.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Kafka
    id: kafka
    description: |
      This plugin writes metrics to a [Kafka Broker](http://kafka.apache.org)
      acting a Kafka Producer.
    introduced: v0.1.7
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Amazon Kinesis
    id: kinesis
    description: |
      This plugin writes metrics to a [Amazon
      Kinesis](https://aws.amazon.com/kinesis) endpoint. It will batch all
      Points in one request to reduce the number of API requests.

      Please consult [Amazon's official
      documentation](http://docs.aws.amazon.com/kinesis/latest/dev/key-concepts.html)
      for more details on the Kinesis architecture and concepts.
    introduced: v0.2.5
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, messaging]
  - name: Librato
    id: librato
    description: |
      This plugin writes metrics to the [Librato](https://www.librato.com/)
      service. It requires an `api_user` and `api_token` which can be obtained
      [here](https://metrics.librato.com/account/api_tokens) for your account.

      The `source_tag` option in the Configuration file is used to send
      contextual information from Point Tags to the API. Besides from this, the
      plugin currently does not send any additional associated Point Tags.

      > [!IMPOTANT]
      > If the point value being sent cannot be converted to a `float64`, the
      > metric is skipped.
    introduced: v0.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Logz.io
    id: logzio
    description: |
      This plugin writes metrics to the [Logz.io](https://logz.io) service via
      HTTP.
    introduced: v1.17.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Grafana Loki
    id: loki
    description: |
      This plugin writes logs to a [Grafana Loki](https://grafana.com/loki)
      instance, using the metric name and tags as labels. The log line will
      contain all fields in `key="value"` format easily parsable with the
      `logfmt` parser in Loki.

      Logs within each stream are sorted by timestamp before being sent to
      Loki.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [logging]
  - name: Microsoft Fabric
    id: microsoft_fabric
    description: |
      This plugin writes metrics to [Fabric
      Eventhouse](https://learn.microsoft.com/fabric/real-time-intelligence/eventhouse)
      and [Fabric
      Eventstream](https://learn.microsoft.com/fabric/real-time-intelligence/event-streams/overview?tabs=enhancedcapabilities)
      artifacts of [Real-Time Intelligence in Microsoft
      Fabric](https://learn.microsoft.com/fabric/real-time-intelligence/overview).

      Real-Time Intelligence is a SaaS service in Microsoft Fabric that allows
      you to extract insights and visualize data in motion. It offers an
      end-to-end solution for event-driven scenarios, streaming data, and data
      logs.
    introduced: v1.35.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: MongoDB
    id: mongodb
    description: |
      This plugin writes metrics to [MongoDB](https://www.mongodb.com)
      automatically creating collections as time series collections if they
      don't exist.

      > [!NOTE]
      > This plugin requires MongoDB v5 or later for time series collections.
    introduced: v1.21.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: MQTT Producer
    id: mqtt
    description: |
      This plugin writes metrics to a [MQTT broker](http://http://mqtt.org/)
      acting as a MQTT producer. The plugin supports the MQTT protocols `3.1.1`
      and `5`.

      > [!NOTE]
      > In v2.0.12+ of the mosquitto MQTT server, there is a
      > [bug](https://github.com/eclipse/mosquitto/issues/2117) requiring the
      > `keep_alive` value to be set non-zero in Telegraf. Otherwise, the server
      > will return with `identifier rejected`. As a reference
      > `eclipse/paho.golang` sets the `keep_alive` to 30.
    introduced: v0.2.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: NATS
    id: nats
    description: |
      This plugin writes metrics to subjects of a set of
      [NATS](https://nats.io) instances in one of the supported [data
      formats](/telegraf/v1/data_formats/output).
    introduced: v1.1.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Nebius Cloud Monitoring
    id: nebius_cloud_monitoring
    description: |
      This plugin writes metrics to the [Nebuis Cloud
      Monitoring](https://nebius.com/il/services/monitoring) service.
    introduced: v1.27.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: New Relic
    id: newrelic
    description: |
      This plugins writes metrics to [New Relic Insights](https://newrelic.com)
      using the [Metrics
      API](https://docs.newrelic.com/docs/data-ingest-apis/get-data-new-relic/metric-api/introduction-metric-api).
      To use this plugin you have to obtain an [Insights API
      Key](https://docs.newrelic.com/docs/apis/get-started/intro-apis/types-new-relic-api-keys#user-api-key).
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: NSQ
    id: nsq
    description: |
      This plugin writes metrics to the given topic of a [NSQ](https://nsq.io)
      instance as a producer in one of the supported [data
      formats](/telegraf/v1/data_formats/output).
    introduced: v0.2.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: OpenSearch
    id: opensearch
    description: |
      This plugin writes metrics to a [OpenSearch](https://opensearch.org/)
      instance via HTTP. It supports OpenSearch releases v1 and v2 but future
      comparability with 1.x is not guaranteed and instead will focus on 2.x
      support.

      > [!TIP]
      > Consider using the existing Elasticsearch plugin for 1.x.
    introduced: v1.29.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore, logging]
  - name: OpenTelemetry
    id: opentelemetry
    description: |
      This plugin writes metrics to [OpenTelemetry](https://opentelemetry.io)
      servers and agents via gRPC.
    introduced: v1.20.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [logging, messaging]
  - name: OpenTSDB
    id: opentsdb
    description: |
      This plugin writes metrics to an [OpenTSDB](http://opentsdb.net/)
      instance using either the telnet or HTTP mode. Using the HTTP API is
      recommended since OpenTSDB 2.0.
    introduced: v0.1.9
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Parquet
    id: parquet
    description: |
      This plugin writes metrics to [parquet](https://parquet.apache.org)
      files. By default, metrics are grouped by metric name and written all to
      the same file.

      > [!IMPORTANT]
      > If a metric schema does not match the schema in the file it will be
      > dropped.

      To lean more about the parquet format, check out the [parquet
      docs](https://parquet.apache.org/docs/) as well as a blog post on
      [querying
      parquet](https://www.influxdata.com/blog/querying-parquet-millisecond-latency/).
    introduced: v1.32.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: PostgreSQL
    id: postgresql
    description: |
      This plugin writes metrics to a [PostgreSQL](https://www.postgresql.org/)
      (or compatible) server managing the schema and automatically updating
      missing columns.
    introduced: v1.24.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Prometheus
    id: prometheus_client
    description: |
      This plugin starts a [Prometheus](https://prometheus.io) client and
      exposes the written metrics on a `/metrics` endpoint by default. This
      endpoint can then be polled by a Prometheus server.
    introduced: v0.2.1
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: Quix
    id: quix
    description: |
      This plugin writes metrics to a [Quix](https://quix.io) endpoint.

      Please consult Quix's [official documentation](https://quix.io/docs/) for
      more details on the Quix platform architecture and concepts.
    introduced: v1.33.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, messaging]
  - name: Redis Time Series
    id: redistimeseries
    description: |
      This plugin writes metrics to a [Redis
      time-series](https://redis.io/timeseries) server.
    introduced: v1.0.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Remote File
    id: remotefile
    description: |
      This plugin writes metrics to files in a remote location using the
      [rclone library](https://rclone.org). Currently the following backends
      are supported:

      - `local`: [Local filesystem](https://rclone.org/local/)
      - `s3`: [Amazon S3 storage providers](https://rclone.org/s3/)
      - `sftp`: [Secure File Transfer Protocol](https://rclone.org/sftp/)
    introduced: v1.32.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Riemann
    id: riemann
    description: |
      This plugin writes metric to the [Riemann](http://riemann.io) serice via
      TCP or UDP.
    introduced: v1.3.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Sensu Go
    id: sensu
    description: |
      This plugin writes metrics to [Sensu Go](https://sensu.io) via its HTTP
      events API.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: SignalFx
    id: signalfx
    description: |
      This plugin writes metrics to
      [SignalFx](https://docs.signalfx.com/en/latest/).
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications]
  - name: Socket Writer
    id: socket_writer
    description: |
      This plugin writes metrics to a network service e.g. via UDP or TCP in
      one of the supported [data formats](/telegraf/v1/data_formats/output).
    introduced: v1.3.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, network]
  - name: SQL
    id: sql
    description: |
      This plugin writes metrics to a supported SQL database using a simple,
      hard-coded database schema. There is a table for each metric type with
      the table name corresponding to the metric name. There is a column per
      field and a column per tag with an optional column for the metric
      timestamp.

      A row is written for every metric. This means multiple metrics are never
      merged into a single row, even if they have the same metric name, tags,
      and timestamp.

      The plugin uses Golang's generic "database/sql" interface and third party
      drivers. See the driver-specific section for a list of supported drivers
      and details.
    introduced: v1.19.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
  - name: Google Cloud Monitoring
    id: stackdriver
    description: |
      This plugin writes metrics to a `project` in [Google Cloud
      Monitoring](https://cloud.google.com/monitoring/api/v3/) (formerly called
      Stackdriver).
      [Authentication](https://cloud.google.com/docs/authentication/getting-started)
      with Google Cloud is required using either a service account or user
      credentials.

      > [!IMPORTANT]
      > This plugin accesses APIs which are
      > [chargeable](https://cloud.google.com/stackdriver/pricing#google-clouds-operations-suite-pricing)
      > and might incur costs.

      By default, Metrics are grouped by the `namespace` variable and metric
      key, eg: `custom.googleapis.com/telegraf/system/load5`. However, this is
      not the best practice. Setting `metric_name_format = "official"` will
      produce a more easily queried format of:
      `metric_type_prefix/[namespace_]name_key/kind`. If the global namespace
      is not set, it is omitted as well.
    introduced: v1.9.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: ActiveMQ STOMP
    id: stomp
    description: |
      This plugin writes metrics to an [Active MQ
      Broker](http://activemq.apache.org/) for [STOMP](https://stomp.github.io)
      but also supports [Amazon MQ](https://aws.amazon.com/amazon-mq) brokers.
      Metrics can be written in one of the supported [data
      formats](/telegraf/v1/data_formats/output).
    introduced: v1.24.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [messaging]
  - name: Sumo Logic
    id: sumologic
    description: |
      This plugin writes metrics to a [Sumo Logic HTTP
      Source](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/HTTP-Source/Upload-Metrics-to-an-HTTP-Source)
      using one of the following data formats:

      - `graphite` for Content-Type of `application/vnd.sumologic.graphite`
      - `carbon2` for Content-Type of `application/vnd.sumologic.carbon2`
      - `prometheus` for Content-Type of `application/vnd.sumologic.prometheus`
    introduced: v1.16.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [logging]
  - name: Syslog
    id: syslog
    description: |
      This plugin writes metrics as syslog messages via UDP in [RFC5426
      format](https://tools.ietf.org/html/rfc5426) or via TCP in [RFC6587
      format](https://tools.ietf.org/html/rfc6587) or via TLS in [RFC5425
      format](https://tools.ietf.org/html/rfc5425), with or without the octet
      counting framing.

      > [!IMPORTANT]
      > Syslog messages are formatted according to
      > [RFC5424](https://tools.ietf.org/html/rfc5424) limiting the field sizes
      > when sending messages according to the [syslog message
      > format](https://datatracker.ietf.org/doc/html/rfc5424#section-6) section
      > of the RFC. Sending messages beyond these sizes may get dropped by a
      > strict receiver silently.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [logging]
  - name: Amazon Timestream
    id: timestream
    description: |
      This plugin writes metrics to the [Amazon
      Timestream](https://aws.amazon.com/timestream) service.
    introduced: v1.16.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Warp10
    id: warp10
    description: |
      This plugin writes metrics to the [Warp 10](https://www.warp10.io)
      service.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud, datastore]
  - name: Wavefront
    id: wavefront
    description: |
      This plugin writes metrics to a [Wavefront](https://www.wavefront.com)
      instance or a Wavefront Proxy instance over HTTP or HTTPS.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, cloud]
  - name: Websocket
    id: websocket
    description: |
      This plugin writes metrics to a WebSocket endpoint in one of the
      supported [data formats](/telegraf/v1/data_formats/output).
    introduced: v1.19.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [applications, web]
  - name: Yandex Cloud Monitoring
    id: yandex_cloud_monitoring
    description: |
      This plugin writes metrics to the [Yandex Cloud
      Monitoring](https://cloud.yandex.com/services/monitoring) service.
    introduced: v1.17.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [cloud]
  - name: Zabbix
    id: zabbix
    description: |
      This plugin writes metrics to [Zabbix](https://www.zabbix.com/) via
      [traps](https://www.zabbix.com/documentation/current/en/manual/appendix/items/trapper).
      It has been tested with versions v3.0, v4.0 and v6.0 but should work with
      newer versions of Zabbix as long as the protocol doesn't change.
    introduced: v1.30.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [datastore]
aggregator:
  - name: Basic Statistics
    id: basicstats
    description: |
      This plugin computes basic statistics such as counts, differences,
      minima, maxima, mean values, non-negative differences etc. for a set of
      metrics and emits these statistical values every `period`.
    introduced: v1.5.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [statistics]
  - name: Derivative
    id: derivative
    description: |
      This plugin computes the derivative for all fields of the aggregated
      metrics.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [math]
  - name: Final
    id: final
    description: |
      This plugin emits the last metric of a contiguous series, defined as a
      series which receives updates within the time period in `series_timeout`.
      The contiguous series may be longer than the time interval defined by
      `period`. When a series has not been updated within the `series_timeout`,
      the last metric is emitted.

      Alternatively, the plugin emits the last metric in the `period` for the
      `periodic` output strategy.

      This is useful for getting the final value for data sources that produce
      discrete time series such as procstat, cgroup, kubernetes etc. or to
      downsample metrics collected at a higher frequency.

      > [!NOTE]
      > All emited metrics do have fields with `_final` appended to the
      > field-name by default.
    introduced: v1.11.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [sampling]
  - name: Histogram
    id: histogram
    description: |
      This plugin creates histograms containing the counts of field values
      within the configured range. The histogram metric is emitted every
      `period`.

      In `cumulative` mode, values added to a bucket are also added to the
      consecutive buckets in the distribution creating a [cumulative
      histogram](https://en.wikipedia.org/wiki/Histogram#/media/File:Cumulative_vs_normal_histogram.svg).

      > [!NOTE]
      > By default bucket counts are not reset between periods and will be
      > non-strictly increasing while Telegraf is running. This behavior can be
      > by setting the `reset` parameter.
    introduced: v1.4.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [statistics]
  - name: Merge
    id: merge
    description: |
      This plugin merges metrics of the same series and timestamp into new
      metrics with the super-set of fields. A series here is defined by the
      metric name and the tag key-value set.

      Use this plugin when fields are split over multiple metrics, with the
      same measurement, tag set and timestamp.
    introduced: v1.13.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Minimum-Maximum
    id: minmax
    description: |
      This plugin aggregates the minimum and maximum values of each field it
      sees, emitting the aggrate every `period` seconds with field names
      suffixed by `_min` and `_max` respectively.
    introduced: v1.1.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [statistics]
  - name: Quantile
    id: quantile
    description: |
      This plugin aggregates each numeric field per metric into the specified
      quantiles and emits the quantiles every `period`. Different aggregation
      algorithms are supported with varying accuracy and limitations.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [statistics]
  - name: Starlark
    id: starlark
    description: |
      This plugin allows to implement a custom aggregator plugin via a
      [Starlark](https://github.com/google/starlark-go) script.

      The Starlark language is a dialect of Python and will be familiar to
      those who have experience with the Python language. However, there are
      major differences. Existing Python code is unlikely to work unmodified.

      > [!NOTE]
      > The execution environment is sandboxed, and it is not possible to access
      > the local filesystem or perfoming network operations. This is by design
      > of the Starlark language as a configuration language.

      The Starlark script used by this plugin needs to be composed of the three
      methods defining an aggreagtor named `add`, `push` and `reset`.

      The `add` method is called as soon as a new metric is added to the plugin
      the metrics to the aggregator. After `period`, the `push` method is
      called to output the resulting metrics and finally the aggregation is
      reset by using the `reset` method of the Starlark script.

      The Starlark functions might use the global function `state` to keep
      aggregation information such as added metrics etc.

      More details on the syntax and available functions can be found in the
      [Starlark
      specification](https://github.com/google/starlark-go/blob/d1966c6b9fcd/doc/spec.md).
    introduced: v1.21.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Value Counter
    id: valuecounter
    description: |
      This plugin counts the occurrence of unique values in fields and emits
      the counter once every `period` with the field-names being suffixed by
      the unique value converted to `string`.

      > [!NOTE]
      > The fields to be counted must be configured using the `fields` setting,
      > otherwise no field will be counted and no metric is emitted.

      This plugin is useful to e.g. count the occurrances of HTTP status codes
      or other categorical values in the defined `period`.

      > [!IMPORTANT]
      > Counting fields with a high number of potential values may produce a
      > significant amounts of new fields and results in an increased memory
      > usage. Take care to only count fields with a limited set of values.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [statistics]
processor:
  - name: AWS EC2 Metadata
    id: aws_ec2
    description: |
      This plugin appends metadata gathered from [AWS
      IMDS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
      to metrics associated with EC2 instances.
    introduced: v1.18.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [annotation, cloud]
  - name: Batch
    id: batch
    description: |
      This plugin groups metrics into batches by adding a batch tag. This is
      useful for parallel processing of metrics where downstream processors,
      aggregators or outputs can then select a batch using `tagpass` or
      `metricpass`.

      Metrics are distributed across batches using the round-robin scheme.
    introduced: v1.33.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [grouping]
  - name: Clone
    id: clone
    description: |
      This plugin creates a copy of each metric passing through it, preserving
      the original metric and allowing modifications such as [metric
      modifiers](/telegraf/v1/configuration/#modifiers) in the copied metric.

      > [!NOTE]
      > [Metric filtering](/telegraf/v1/configuration/#metric-filtering) options
      > apply to both the clone and the original metric.
    introduced: v1.13.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Converter
    id: converter
    description: |
      This plugin allows transforming tags into fields or timestamps, and
      converting fields into tags or timestamps. The plugin furthermore allows
      to change the field type.

      > [!IMPORTANT]
      > When converting tags to fields, take care to ensure the series is still
      > uniquely identifiable. Fields with the same series key (measurement +
      > tags) will overwrite one another.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Cumulative Sum
    id: cumulative_sum
    description: |
      This plugin accumulates field values per-metric over time and emit
      metrics with cumulative sums whenever a metric is updated. This is useful
      when using outputs relying on monotonically increasing values

      > [!NOTE]
      > Metrics within a series are accumulated in the **order of arrival** and
      > not in order of their timestamps!
    introduced: v1.35.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Date
    id: date
    description: |
      This plugin adds the metric timestamp as a human readable tag. A common
      use is to add a tag that can be used to group by month or year.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Dedup
    id: dedup
    description: |
      This plugin filters metrics whose field values are exact repetitions of
      the previous values. This plugin will store its state between runs if the
      `statefile` option in the agent config section is set.
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [filtering]
  - name: Defaults
    id: defaults
    description: |
      This plugin allows to specify default values for fields and tags for
      cases where the tag or field does not exist or has an empty value.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Enum
    id: enum
    description: |
      This plugin allows the mapping of field or tag values according to the
      configured enumeration. The main use-case is to rewrite numerical values
      into human-readable values or vice versa. Default mappings can be
      configured to be used for all remaining values.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Execd
    id: execd
    description: |
      This plugin runs an external program as a separate process and pipes
      metrics in to the process's `stdin` and reads processed metrics from its
      `stdout`. Program output on `stderr` is logged.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [general purpose]
  - name: Filepath
    id: filepath
    description: |
      This plugin allows transforming a path, using e.g. basename to extract
      the last path element, for tag and field values. Values can be modified
      in place or stored in another key.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Filter
    id: filter
    description: |
      This plugin allows specifying a set of rules for metrics with the ability
      to _keep_ or _drop_ those metrics. It does _not_ modify the metric. As
      such a user might want to apply this processor to remove metrics from the
      processing/output stream.

      > [!NOTE]
      > The filtering is _not_ output specific, but will apply to the metrics
      > processed by this processor.
    introduced: v1.29.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [filtering]
  - name: Network Interface Name
    id: ifname
    description: |
      This plugin looks up network interface names using SNMP.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [annotation]
  - name: Lookup
    id: lookup
    description: |
      This plugin allows to use one or more files containing lookup-tables for
      annotating incoming metrics. The lookup is _static_ as the files are only
      used on startup. The main use-case for this is to annotate metrics with
      additional tags e.g. dependent on their source. Multiple tags can be
      added depending on the lookup-table _files_.

      The lookup key can be generated using a Golang template with the ability
      to access the metric name via `{{.Name}}`, the tag values via `{{.Tag
      "mytag"}}`, with `mytag` being the tag-name and field-values via
      `{{.Field "myfield"}}`, with `myfield` being the field-name. Non-existing
      tags and field will result in an empty string or `nil` respectively. In
      case the key cannot be found, the metric is passed-through unchanged. By
      default all matching tags are added and existing tag-values are
      overwritten.

      > [!NOTE]
      > The plugin only supports the addition of tags and thus all mapped
      > tag-values need to be strings!
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [annotation]
  - name: Noise
    id: noise
    description: |
      This plugin is used to add noise to numerical field values. For each
      field a noise is generated using a defined probability density function
      and added to the value. The function type can be configured as _Laplace_,
      _Gaussian_ or _Uniform_.
    introduced: v1.22.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Override
    id: override
    description: |
      This plugin allows to modify metrics using [metric
      modifiers](/telegraf/v1/configuration/#modifiers). Use-cases of this
      plugin encompass ensuring certain tags or naming conventions are adhered
      to irrespective of input plugin configurations, e.g. by `taginclude`.

      > [!NOTE]
      > [Metric filtering](/telegraf/v1/configuration/#metric-filtering) options
      > apply to both the clone and the original metric.
    introduced: v1.6.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Parser
    id: parser
    description: |
      This plugin parses defined fields or tags containing the specified [data
      format](/telegraf/v1/data_formats/input) and creates new metrics based on
      the resulting fields and tags.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Pivot
    id: pivot
    description: |
      This plugin rotates single-valued metrics into a multi-field metric. The
      result is a more compact representation for applying mathematical
      operators to or do comparisons between metrics or flatten fields.

      > [!TIP]
      > To perform the reverse operation use the
      > [unpivot](/telegraf/v1/plugins/#processor-unpivot) processor.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Port Name Lookup
    id: port_name
    description: |
      This plugin allows converting a tag or field containing a well-known
      port, either a number (e.g. `80`) for TCP ports or a port and protocol
      (e.g. `443/tcp`), to the registered service name.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [annotation]
  - name: Printer
    id: printer
    description: |
      This plugin prints every metric passing through it to the standard
      output.
    introduced: v1.1.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [testing]
  - name: Regex
    id: regex
    description: |
      This plugin transforms tag and field _values_ as well as renaming tags,
      fields and metrics using regular expression patterns. Tag and field
      _values_ can be transformed using named-groups in a batch fashion.

      The regex processor **only operates on string fields**. It will not work
      on any other data types, like an integer or float.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Rename
    id: rename
    description: |
      This plugin allows to rename measurements, fields and tags.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Reverse DNS
    id: reverse_dns
    description: |
      This plugin does a reverse-dns lookup on tags or fields containing IPs
      and creates a tag or field containing the corresponding DNS name.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [annotation]
  - name: Round
    id: round
    description: |
      This plugin allows to round numerical field values to the configured
      precision. This is particularly useful in combination with the [dedup
      processor](/telegraf/v1/plugins/#processor-dedup) to reduce the number of
      metrics sent to the output if only a lower precision is required for the
      values.
    introduced: v1.36.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: S2 Geo
    id: s2geo
    description: |
      This plugin uses the WGS-84 coordinates in decimal degrees specified in
      the latitude and longitude fields and adds a tag with the corresponding
      S2 cell ID token of specified [cell
      level](https://s2geometry.io/resources/s2cell_statistics.html).
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [annotation]
  - name: Scale
    id: scale
    description: |
      This plugin allows to scale field-values from an input range into the
      given output range according to this formula:

      Alternatively, you can apply a factor and offset to the input according
      to this formula

      Input fields are converted to floating point values if possible.
      Otherwise, fields that cannot be converted are ignored and keep their
      original value.

      > [!NOTE]
      > Neither the input nor output values are clipped to their respective
      > ranges!
    introduced: v1.27.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: SNMP Lookup
    id: snmp_lookup
    description: |
      This plugin looks up extra information via SNMP and adds it to the metric
      as tags.
    introduced: v1.30.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [annotation]
  - name: Split
    id: split
    description: |
      This plugin splits a metric up into one or more metrics based on a
      configured template. The resulting metrics will be timestamped according
      to the source metric. Templates can overlap, where a field or tag, is
      used across templates and as a result end up in multiple metrics.

      > [!NOTE]
      > If drop original is changed to true, then the plugin can result in
      > dropping all metrics when no match is found! Please ensure to test
      > templates before putting into production *and* use metric filtering to
      > avoid data loss.
    introduced: v1.28.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Starlark
    id: starlark
    description: |
      This plugin calls the provided Starlark function for each matched metric,
      allowing for custom programmatic metric processing.

      The Starlark language is a dialect of Python, and will be familiar to
      those who have experience with the Python language. However, there are
      major differences. Existing Python code is unlikely to work unmodified.
      The execution environment is sandboxed, and it is not possible to do I/O
      operations such as reading from files or sockets.

      The **[Starlark
      specification](https://github.com/google/starlark-go/blob/d1966c6b9fcd/doc/spec.md)**
      has details about the syntax and available functions.
    introduced: v1.15.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [general purpose]
  - name: Strings
    id: strings
    description: |
      This plugin allows to manipulate strings in the measurement name, tag and
      field values using different functions.
    introduced: v1.8.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Tag Limit
    id: tag_limit
    description: |
      This plugin ensures that only a certain number of tags are preserved for
      any given metric, and to choose the tags to preserve when the number of
      tags appended by the data source is over the limit.

      This can be useful when dealing with output systems (e.g. Stackdriver)
      that impose hard limits on the number of tags/labels per metric or where
      high levels of cardinality are computationally and/or financially
      expensive.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [filtering]
  - name: Template
    id: template
    description: |
      This plugin applies templates to metrics for generating a new tag. The
      primary use case of this plugin is to create a tag that can be used for
      dynamic routing to multiple output plugins or using an output specific
      routing option.

      The template has access to each metric's measurement name, tags, fields,
      and timestamp. Templates follow the [Go Template
      syntax](https://golang.org/pkg/text/template/) and may contain [Sprig
      functions](http://masterminds.github.io/sprig/).
    introduced: v1.14.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Timestamp
    id: timestamp
    description: |
      This plugin allows to parse fields containing timestamps into timestamps
      of other format.
    introduced: v1.31.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: TopK
    id: topk
    description: |
      This plugin filters the top series over a period of time and calculates
      the top metrics via different aggregation functions. The processing steps
      comprise grouping the metrics based on the metric name and tags,
      computing the aggregate functions for each group every period and
      outputting the top `K` groups.
    introduced: v1.7.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
  - name: Unpivot
    id: unpivot
    description: |
      This plugin allows to rotate a multi-field series into single-valued
      metrics. The resulting metrics allow to more easily aggregate data across
      fields.

      > [!TIP]
      > To perform the reverse operation use the
      > [pivot](/telegraf/v1/plugins/#processor-pivot) processor.
    introduced: v1.12.0
    os_support: [freebsd, linux, macos, solaris, windows]
    tags: [transformation]
