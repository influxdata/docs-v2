name: 'Validate Links'
description: 'Runs e2e browser-based link validation tests against Hugo site using Cypress'

inputs:
  files:
    description: 'Space-separated list of files to validate'
    required: true
  product-name:
    description: 'Product name for reporting (optional)'
    required: false
    default: ''
  cache-enabled:
    description: 'Enable link validation caching'
    required: false
    default: 'true'
  cache-key:
    description: 'Cache key prefix for this validation run'
    required: false
    default: 'link-validation'

outputs:
  failed:
    description: 'Whether validation failed (true/false)'
    value: ${{ steps.validate.outputs.failed }}

runs:
  using: 'composite'
  steps:
    - name: Restore link validation cache
      if: inputs.cache-enabled == 'true'
      uses: actions/cache@v4
      with:
        path: .cache/link-validation
        key: ${{ inputs.cache-key }}-${{ runner.os }}-${{ hashFiles('content/**/*.md', 'content/**/*.html') }}
        restore-keys: |
          ${{ inputs.cache-key }}-${{ runner.os }}-
          ${{ inputs.cache-key }}-
    
    - name: Run link validation
      shell: bash
      run: |
        # Set CI-specific environment variables
        export CI=true
        export GITHUB_ACTIONS=true
        export NODE_OPTIONS="--max-old-space-size=4096"
        
        # Add timeout to prevent hanging
        timeout ${{ inputs.timeout }} node cypress/support/run-e2e-specs.js ${{ inputs.files }} \
          --spec cypress/e2e/content/article-links.cy.js || {
          exit_code=$?
          echo "::error::Link validation failed with exit code $exit_code"
          
          # Check for specific error patterns
          if [ -f hugo.log ]; then
            echo "::group::Hugo Server Logs"
            cat hugo.log
            echo "::endgroup::"
          fi
          
          if [ -f /tmp/broken_links_report.json ]; then
            echo "::group::Broken Links Report"
            cat /tmp/broken_links_report.json
            echo "::endgroup::"
          fi
          
          exit $exit_code
        }
        
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: validation-logs-${{ inputs.product-name }}
        path: |
          hugo.log
    
    - name: Upload broken links report
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: broken-links-report${{ inputs.product-name && format('-{0}', inputs.product-name) || '' }}
        path: /tmp/broken_links_report.json